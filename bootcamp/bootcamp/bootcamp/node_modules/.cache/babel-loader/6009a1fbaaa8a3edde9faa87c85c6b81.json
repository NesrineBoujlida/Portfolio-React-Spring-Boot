{"ast":null,"code":"'use strict';\n\nvar tslib = require('tslib');\n\nvar React = require('react');\n\nvar heyListen = require('hey-listen');\n\nvar sync = require('framesync');\n\nvar popmotion = require('popmotion');\n\nvar styleValueTypes = require('style-value-types');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar createDefinition = function (propNames) {\n  return {\n    isEnabled: function (props) {\n      return propNames.some(function (name) {\n        return !!props[name];\n      });\n    }\n  };\n};\n\nvar featureDefinitions = {\n  measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n  animation: createDefinition([\"animate\", \"exit\", \"variants\", \"whileHover\", \"whileTap\", \"whileFocus\", \"whileDrag\", \"whileInView\"]),\n  exit: createDefinition([\"exit\"]),\n  drag: createDefinition([\"drag\", \"dragControls\"]),\n  focus: createDefinition([\"whileFocus\"]),\n  hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n  tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n  pan: createDefinition([\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"]),\n  inView: createDefinition([\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"])\n};\n\nfunction loadFeatures(features) {\n  for (var key in features) {\n    if (features[key] === null) continue;\n\n    if (key === \"projectionNodeConstructor\") {\n      featureDefinitions.projectionNodeConstructor = features[key];\n    } else {\n      featureDefinitions[key].Component = features[key];\n    }\n  }\n}\n\nvar LazyContext = React.createContext({\n  strict: false\n});\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\n\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n  var features = [];\n  var lazyContext = React.useContext(LazyContext);\n  if (!visualElement) return null;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n\n  if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && lazyContext.strict) {\n    heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n  }\n\n  for (var i = 0; i < numFeatures; i++) {\n    var name_1 = featureNames[i];\n    var _a = featureDefinitions[name_1],\n        isEnabled = _a.isEnabled,\n        Component = _a.Component;\n    /**\n     * It might be possible in the future to use this moment to\n     * dynamically request functionality. In initial tests this\n     * was producing a lot of duplication amongst bundles.\n     */\n\n    if (isEnabled(props) && Component) {\n      features.push(React__namespace.createElement(Component, tslib.__assign({\n        key: name_1\n      }, props, {\n        visualElement: visualElement\n      })));\n    }\n  }\n\n  return features;\n}\n/**\n * @public\n */\n\n\nvar MotionConfigContext = React.createContext({\n  transformPagePoint: function (p) {\n    return p;\n  },\n  isStatic: false\n});\nvar MotionContext = React.createContext({});\n\nfunction useVisualElementContext() {\n  return React.useContext(MotionContext).visualElement;\n}\n/**\n * @public\n */\n\n\nvar PresenceContext = React.createContext(null);\nvar isBrowser = typeof window !== \"undefined\";\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n  var lazyContext = React.useContext(LazyContext);\n  var parent = useVisualElementContext();\n  var presenceContext = React.useContext(PresenceContext);\n  var visualElementRef = React.useRef(undefined);\n  /**\n   * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n   */\n\n  if (!createVisualElement) createVisualElement = lazyContext.renderer;\n\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component, {\n      visualState: visualState,\n      parent: parent,\n      props: props,\n      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false\n    });\n  }\n\n  var visualElement = visualElementRef.current;\n  useIsomorphicLayoutEffect(function () {\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n  });\n  React.useEffect(function () {\n    var _a;\n\n    (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n  });\n  useIsomorphicLayoutEffect(function () {\n    return function () {\n      return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount();\n    };\n  }, []);\n  return visualElement;\n}\n\nfunction isRefObject(ref) {\n  return typeof ref === \"object\" && Object.prototype.hasOwnProperty.call(ref, \"current\");\n}\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\n\n\nfunction useMotionRef(visualState, visualElement, externalRef) {\n  return React.useCallback(function (instance) {\n    var _a;\n\n    instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n\n    if (visualElement) {\n      instance ? visualElement.mount(instance) : visualElement.unmount();\n    }\n\n    if (externalRef) {\n      if (typeof externalRef === \"function\") {\n        externalRef(instance);\n      } else if (isRefObject(externalRef)) {\n        externalRef.current = instance;\n      }\n    }\n  },\n  /**\n   * Only pass a new ref callback to React if we've received a visual element\n   * factory. Otherwise we'll be mounting/remounting every time externalRef\n   * or other dependencies change.\n   */\n  [visualElement]);\n}\n/**\n * Decides if the supplied variable is an array of variant labels\n */\n\n\nfunction isVariantLabels(v) {\n  return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\n\n\nfunction isVariantLabel(v) {\n  return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\n\n\nfunction getCurrent(visualElement) {\n  var current = {};\n  visualElement.forEachValue(function (value, key) {\n    return current[key] = value.get();\n  });\n  return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\n\n\nfunction getVelocity(visualElement) {\n  var velocity = {};\n  visualElement.forEachValue(function (value, key) {\n    return velocity[key] = value.getVelocity();\n  });\n  return velocity;\n}\n\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n  var _a;\n\n  if (currentValues === void 0) {\n    currentValues = {};\n  }\n\n  if (currentVelocity === void 0) {\n    currentVelocity = {};\n  }\n  /**\n   * If the variant definition is a function, resolve.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n  }\n  /**\n   * If the variant definition is a variant label, or\n   * the function returned a variant label, resolve.\n   */\n\n\n  if (typeof definition === \"string\") {\n    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n  }\n  /**\n   * At this point we've resolved both functions and variant labels,\n   * but the resolved variant label might itself have been a function.\n   * If so, resolve. This can only have returned a valid target object.\n   */\n\n\n  if (typeof definition === \"function\") {\n    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n  }\n\n  return definition;\n}\n\nfunction resolveVariant(visualElement, definition, custom) {\n  var props = visualElement.getProps();\n  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nfunction checkIfControllingVariants(props) {\n  var _a;\n\n  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);\n}\n\nfunction checkIfVariantNode(props) {\n  return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n  if (checkIfControllingVariants(props)) {\n    var initial = props.initial,\n        animate = props.animate;\n    return {\n      initial: initial === false || isVariantLabel(initial) ? initial : undefined,\n      animate: isVariantLabel(animate) ? animate : undefined\n    };\n  }\n\n  return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n  var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)),\n      initial = _a.initial,\n      animate = _a.animate;\n\n  return React.useMemo(function () {\n    return {\n      initial: initial,\n      animate: animate\n    };\n  }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\n\nfunction variantLabelsAsDependency(prop) {\n  return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\n\n\nfunction useConstant(init) {\n  var ref = React.useRef(null);\n\n  if (ref.current === null) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nfunction addUniqueItem(arr, item) {\n  arr.indexOf(item) === -1 && arr.push(item);\n}\n\nfunction removeItem(arr, item) {\n  var index = arr.indexOf(item);\n  index > -1 && arr.splice(index, 1);\n} // Adapted from array-move\n\n\nfunction moveItem(_a, fromIndex, toIndex) {\n  var _b = tslib.__read(_a),\n      arr = _b.slice(0);\n\n  var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n\n  if (startIndex >= 0 && startIndex < arr.length) {\n    var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n\n    var _c = tslib.__read(arr.splice(fromIndex, 1), 1),\n        item = _c[0];\n\n    arr.splice(endIndex, 0, item);\n  }\n\n  return arr;\n}\n\nvar SubscriptionManager =\n/** @class */\nfunction () {\n  function SubscriptionManager() {\n    this.subscriptions = [];\n  }\n\n  SubscriptionManager.prototype.add = function (handler) {\n    var _this = this;\n\n    addUniqueItem(this.subscriptions, handler);\n    return function () {\n      return removeItem(_this.subscriptions, handler);\n    };\n  };\n\n  SubscriptionManager.prototype.notify = function (a, b, c) {\n    var numSubscriptions = this.subscriptions.length;\n    if (!numSubscriptions) return;\n\n    if (numSubscriptions === 1) {\n      /**\n       * If there's only a single handler we can just call it without invoking a loop.\n       */\n      this.subscriptions[0](a, b, c);\n    } else {\n      for (var i = 0; i < numSubscriptions; i++) {\n        /**\n         * Check whether the handler exists before firing as it's possible\n         * the subscriptions were modified during this loop running.\n         */\n        var handler = this.subscriptions[i];\n        handler && handler(a, b, c);\n      }\n    }\n  };\n\n  SubscriptionManager.prototype.getSize = function () {\n    return this.subscriptions.length;\n  };\n\n  SubscriptionManager.prototype.clear = function () {\n    this.subscriptions.length = 0;\n  };\n\n  return SubscriptionManager;\n}();\n\nvar isFloat = function (value) {\n  return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\n\n\nvar MotionValue =\n/** @class */\nfunction () {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   *\n   * -  `transformer`: A function to transform incoming values with.\n   *\n   * @internal\n   */\n  function MotionValue(init) {\n    var _this = this;\n    /**\n     * Duration, in milliseconds, since last updating frame.\n     *\n     * @internal\n     */\n\n\n    this.timeDelta = 0;\n    /**\n     * Timestamp of the last time this `MotionValue` was updated.\n     *\n     * @internal\n     */\n\n    this.lastUpdated = 0;\n    /**\n     * Functions to notify when the `MotionValue` updates.\n     *\n     * @internal\n     */\n\n    this.updateSubscribers = new SubscriptionManager();\n    /**\n     * Functions to notify when the velocity updates.\n     *\n     * @internal\n     */\n\n    this.velocityUpdateSubscribers = new SubscriptionManager();\n    /**\n     * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n     *\n     * @internal\n     */\n\n    this.renderSubscribers = new SubscriptionManager();\n    /**\n     * Tracks whether this value can output a velocity. Currently this is only true\n     * if the value is numerical, but we might be able to widen the scope here and support\n     * other value types.\n     *\n     * @internal\n     */\n\n    this.canTrackVelocity = false;\n\n    this.updateAndNotify = function (v, render) {\n      if (render === void 0) {\n        render = true;\n      }\n\n      _this.prev = _this.current;\n      _this.current = v; // Update timestamp\n\n      var _a = sync.getFrameData(),\n          delta = _a.delta,\n          timestamp = _a.timestamp;\n\n      if (_this.lastUpdated !== timestamp) {\n        _this.timeDelta = delta;\n        _this.lastUpdated = timestamp;\n        sync__default[\"default\"].postRender(_this.scheduleVelocityCheck);\n      } // Update update subscribers\n\n\n      if (_this.prev !== _this.current) {\n        _this.updateSubscribers.notify(_this.current);\n      } // Update velocity subscribers\n\n\n      if (_this.velocityUpdateSubscribers.getSize()) {\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      } // Update render subscribers\n\n\n      if (render) {\n        _this.renderSubscribers.notify(_this.current);\n      }\n    };\n    /**\n     * Schedule a velocity check for the next frame.\n     *\n     * This is an instanced and bound function to prevent generating a new\n     * function once per frame.\n     *\n     * @internal\n     */\n\n\n    this.scheduleVelocityCheck = function () {\n      return sync__default[\"default\"].postRender(_this.velocityCheck);\n    };\n    /**\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\n     * This ensures velocity calculations return `0`.\n     *\n     * This is an instanced and bound function to prevent generating a new\n     * function once per frame.\n     *\n     * @internal\n     */\n\n\n    this.velocityCheck = function (_a) {\n      var timestamp = _a.timestamp;\n\n      if (timestamp !== _this.lastUpdated) {\n        _this.prev = _this.current;\n\n        _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n      }\n    };\n\n    this.hasAnimated = false;\n    this.prev = this.current = init;\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   *\n   * When calling `onChange` inside a React component, it should be wrapped with the\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\n   *\n   * ```jsx\n   * export const MyComponent = () => {\n   *   const x = useMotionValue(0)\n   *   const y = useMotionValue(0)\n   *   const opacity = useMotionValue(1)\n   *\n   *   useEffect(() => {\n   *     function updateOpacity() {\n   *       const maxXY = Math.max(x.get(), y.get())\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n   *       opacity.set(newOpacity)\n   *     }\n   *\n   *     const unsubscribeX = x.onChange(updateOpacity)\n   *     const unsubscribeY = y.onChange(updateOpacity)\n   *\n   *     return () => {\n   *       unsubscribeX()\n   *       unsubscribeY()\n   *     }\n   *   }, [])\n   *\n   *   return <motion.div style={{ x }} />\n   * }\n   * ```\n   *\n   * @internalremarks\n   *\n   * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n   *\n   * ```jsx\n   * useOnChange(x, () => {})\n   * ```\n   *\n   * @param subscriber - A function that receives the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.onChange = function (subscription) {\n    return this.updateSubscribers.add(subscription);\n  };\n\n  MotionValue.prototype.clearListeners = function () {\n    this.updateSubscribers.clear();\n  };\n  /**\n   * Adds a function that will be notified when the `MotionValue` requests a render.\n   *\n   * @param subscriber - A function that's provided the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @internal\n   */\n\n\n  MotionValue.prototype.onRenderRequest = function (subscription) {\n    // Render immediately\n    subscription(this.get());\n    return this.renderSubscribers.add(subscription);\n  };\n  /**\n   * Attaches a passive effect to the `MotionValue`.\n   *\n   * @internal\n   */\n\n\n  MotionValue.prototype.attach = function (passiveEffect) {\n    this.passiveEffect = passiveEffect;\n  };\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @remarks\n   *\n   * ```jsx\n   * const x = useMotionValue(0)\n   * x.set(10)\n   * ```\n   *\n   * @param latest - Latest value to set.\n   * @param render - Whether to notify render subscribers. Defaults to `true`\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.set = function (v, render) {\n    if (render === void 0) {\n      render = true;\n    }\n\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  };\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.get = function () {\n    return this.current;\n  };\n  /**\n   * @public\n   */\n\n\n  MotionValue.prototype.getPrevious = function () {\n    return this.prev;\n  };\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.getVelocity = function () {\n    // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n    return this.canTrackVelocity ? // These casts could be avoided if parseFloat would be typed better\n    popmotion.velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  };\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   *\n   * ```jsx\n   * value.start()\n   * ```\n   *\n   * @param animation - A function that starts the provided animation\n   *\n   * @internal\n   */\n\n\n  MotionValue.prototype.start = function (animation) {\n    var _this = this;\n\n    this.stop();\n    return new Promise(function (resolve) {\n      _this.hasAnimated = true;\n      _this.stopAnimation = animation(resolve);\n    }).then(function () {\n      return _this.clearAnimation();\n    });\n  };\n  /**\n   * Stop the currently active animation.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.stop = function () {\n    if (this.stopAnimation) this.stopAnimation();\n    this.clearAnimation();\n  };\n  /**\n   * Returns `true` if this value is currently animating.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.isAnimating = function () {\n    return !!this.stopAnimation;\n  };\n\n  MotionValue.prototype.clearAnimation = function () {\n    this.stopAnimation = null;\n  };\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   *\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n   * created a `MotionValue` via the `motionValue` function.\n   *\n   * @public\n   */\n\n\n  MotionValue.prototype.destroy = function () {\n    this.updateSubscribers.clear();\n    this.renderSubscribers.clear();\n    this.stop();\n  };\n\n  return MotionValue;\n}();\n/**\n * @internal\n */\n\n\nfunction motionValue(init) {\n  return new MotionValue(init);\n}\n\nvar isMotionValue = function (value) {\n  return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n\n\nvar secondsToMilliseconds = function (seconds) {\n  return seconds * 1000;\n};\n\nvar easingLookup = {\n  linear: popmotion.linear,\n  easeIn: popmotion.easeIn,\n  easeInOut: popmotion.easeInOut,\n  easeOut: popmotion.easeOut,\n  circIn: popmotion.circIn,\n  circInOut: popmotion.circInOut,\n  circOut: popmotion.circOut,\n  backIn: popmotion.backIn,\n  backInOut: popmotion.backInOut,\n  backOut: popmotion.backOut,\n  anticipate: popmotion.anticipate,\n  bounceIn: popmotion.bounceIn,\n  bounceInOut: popmotion.bounceInOut,\n  bounceOut: popmotion.bounceOut\n};\n\nvar easingDefinitionToFunction = function (definition) {\n  if (Array.isArray(definition)) {\n    // If cubic bezier definition, create bezier curve\n    heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n\n    var _a = tslib.__read(definition, 4),\n        x1 = _a[0],\n        y1 = _a[1],\n        x2 = _a[2],\n        y2 = _a[3];\n\n    return popmotion.cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    // Else lookup from table\n    heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\".concat(definition, \"'\"));\n    return easingLookup[definition];\n  }\n\n  return definition;\n};\n\nvar isEasingArray = function (ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\n\n\nvar isAnimatable = function (key, value) {\n  // If the list of keys tat might be non-animatable grows, replace with Set\n  if (key === \"zIndex\") return false; // If it's a number or a keyframes array, we can animate it. We might at some point\n  // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n  // but for now lets leave it like this for performance reasons\n\n  if (typeof value === \"number\" || Array.isArray(value)) return true;\n\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nvar isKeyframesTarget = function (v) {\n  return Array.isArray(v);\n};\n\nvar underDampedSpring = function () {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10\n  };\n};\n\nvar criticallyDampedSpring = function (to) {\n  return {\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10\n  };\n};\n\nvar linearTween = function () {\n  return {\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3\n  };\n};\n\nvar keyframes = function (values) {\n  return {\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values\n  };\n};\n\nvar defaultTransitions = {\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: criticallyDampedSpring,\n  scaleY: criticallyDampedSpring,\n  scale: criticallyDampedSpring,\n  opacity: linearTween,\n  backgroundColor: linearTween,\n  color: linearTween,\n  default: criticallyDampedSpring\n};\n\nvar getDefaultTransition = function (valueKey, to) {\n  var transitionFactory;\n\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n\n  return tslib.__assign({\n    to: to\n  }, transitionFactory(to));\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), {\n  transform: Math.round\n});\n\nvar numberValueTypes = {\n  // Border props\n  borderWidth: styleValueTypes.px,\n  borderTopWidth: styleValueTypes.px,\n  borderRightWidth: styleValueTypes.px,\n  borderBottomWidth: styleValueTypes.px,\n  borderLeftWidth: styleValueTypes.px,\n  borderRadius: styleValueTypes.px,\n  radius: styleValueTypes.px,\n  borderTopLeftRadius: styleValueTypes.px,\n  borderTopRightRadius: styleValueTypes.px,\n  borderBottomRightRadius: styleValueTypes.px,\n  borderBottomLeftRadius: styleValueTypes.px,\n  // Positioning props\n  width: styleValueTypes.px,\n  maxWidth: styleValueTypes.px,\n  height: styleValueTypes.px,\n  maxHeight: styleValueTypes.px,\n  size: styleValueTypes.px,\n  top: styleValueTypes.px,\n  right: styleValueTypes.px,\n  bottom: styleValueTypes.px,\n  left: styleValueTypes.px,\n  // Spacing props\n  padding: styleValueTypes.px,\n  paddingTop: styleValueTypes.px,\n  paddingRight: styleValueTypes.px,\n  paddingBottom: styleValueTypes.px,\n  paddingLeft: styleValueTypes.px,\n  margin: styleValueTypes.px,\n  marginTop: styleValueTypes.px,\n  marginRight: styleValueTypes.px,\n  marginBottom: styleValueTypes.px,\n  marginLeft: styleValueTypes.px,\n  // Transform props\n  rotate: styleValueTypes.degrees,\n  rotateX: styleValueTypes.degrees,\n  rotateY: styleValueTypes.degrees,\n  rotateZ: styleValueTypes.degrees,\n  scale: styleValueTypes.scale,\n  scaleX: styleValueTypes.scale,\n  scaleY: styleValueTypes.scale,\n  scaleZ: styleValueTypes.scale,\n  skew: styleValueTypes.degrees,\n  skewX: styleValueTypes.degrees,\n  skewY: styleValueTypes.degrees,\n  distance: styleValueTypes.px,\n  translateX: styleValueTypes.px,\n  translateY: styleValueTypes.px,\n  translateZ: styleValueTypes.px,\n  x: styleValueTypes.px,\n  y: styleValueTypes.px,\n  z: styleValueTypes.px,\n  perspective: styleValueTypes.px,\n  transformPerspective: styleValueTypes.px,\n  opacity: styleValueTypes.alpha,\n  originX: styleValueTypes.progressPercentage,\n  originY: styleValueTypes.progressPercentage,\n  originZ: styleValueTypes.px,\n  // Misc\n  zIndex: int,\n  // SVG\n  fillOpacity: styleValueTypes.alpha,\n  strokeOpacity: styleValueTypes.alpha,\n  numOctaves: int\n};\n/**\n * A map of default value types for common values\n */\n\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), {\n  // Color props\n  color: styleValueTypes.color,\n  backgroundColor: styleValueTypes.color,\n  outlineColor: styleValueTypes.color,\n  fill: styleValueTypes.color,\n  stroke: styleValueTypes.color,\n  // Border props\n  borderColor: styleValueTypes.color,\n  borderTopColor: styleValueTypes.color,\n  borderRightColor: styleValueTypes.color,\n  borderBottomColor: styleValueTypes.color,\n  borderLeftColor: styleValueTypes.color,\n  filter: styleValueTypes.filter,\n  WebkitFilter: styleValueTypes.filter\n});\n/**\n * Gets the default ValueType for the provided value key\n */\n\n\nvar getDefaultValueType = function (key) {\n  return defaultValueTypes[key];\n};\n\nfunction getAnimatableNone(key, value) {\n  var _a;\n\n  var defaultValueType = getDefaultValueType(key);\n  if (defaultValueType !== styleValueTypes.filter) defaultValueType = styleValueTypes.complex; // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n\n  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nvar instantAnimationState = {\n  current: false\n};\n\nvar isCustomValue = function (v) {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\n\nvar resolveFinalValueInKeyframes = function (v) {\n  // TODO maybe throw if v.length - 1 is placeholder token?\n  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\n\n\nfunction isTransitionDefined(_a) {\n  _a.when;\n  _a.delay;\n  _a.delayChildren;\n  _a.staggerChildren;\n  _a.staggerDirection;\n  _a.repeat;\n  _a.repeatType;\n  _a.repeatDelay;\n  _a.from;\n\n  var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n\n  return !!Object.keys(transition).length;\n}\n\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\n\nfunction convertTransitionToAnimationOptions(_a) {\n  var ease = _a.ease,\n      times = _a.times,\n      yoyo = _a.yoyo,\n      flip = _a.flip,\n      loop = _a.loop,\n      transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n\n  var options = tslib.__assign({}, transition);\n\n  if (times) options[\"offset\"] = times;\n  /**\n   * Convert any existing durations from seconds to milliseconds\n   */\n\n  if (transition.duration) options[\"duration\"] = secondsToMilliseconds(transition.duration);\n  if (transition.repeatDelay) options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n  /**\n   * Map easing names to Popmotion's easing functions\n   */\n\n  if (ease) {\n    options[\"ease\"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  }\n  /**\n   * Support legacy transition API\n   */\n\n\n  if (transition.type === \"tween\") options.type = \"keyframes\";\n  /**\n   * TODO: These options are officially removed from the API.\n   */\n\n  if (yoyo || loop || flip) {\n    heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n    legacyRepeatWarning = true;\n\n    if (yoyo) {\n      options.repeatType = \"reverse\";\n    } else if (loop) {\n      options.repeatType = \"loop\";\n    } else if (flip) {\n      options.repeatType = \"mirror\";\n    }\n\n    options.repeat = loop || yoyo || flip || transition.repeat;\n  }\n  /**\n   * TODO: Popmotion 9 has the ability to automatically detect whether to use\n   * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n   * It'd be good to introduce a similar thing here.\n   */\n\n\n  if (transition.type !== \"spring\") options.type = \"keyframes\";\n  return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\n\n\nfunction getDelayFromTransition(transition, key) {\n  var _a, _b;\n\n  var valueTransition = getValueTransition(transition, key) || {};\n  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\n\nfunction hydrateKeyframes(options) {\n  if (Array.isArray(options.to) && options.to[0] === null) {\n    options.to = tslib.__spreadArray([], tslib.__read(options.to), false);\n    options.to[0] = options.from;\n  }\n\n  return options;\n}\n\nfunction getPopmotionAnimationOptions(transition, options, key) {\n  var _a;\n\n  if (Array.isArray(options.to)) {\n    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;\n  }\n\n  hydrateKeyframes(options);\n  /**\n   * Get a default transition if none is determined to be defined.\n   */\n\n  if (!isTransitionDefined(transition)) {\n    transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n  }\n\n  return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\n\n\nfunction getAnimation(key, value, target, transition, onComplete) {\n  var _a;\n\n  var valueTransition = getValueTransition(transition, key);\n  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n  var isTargetAnimatable = isAnimatable(key, target);\n\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n    /**\n     * If we're trying to animate from \"none\", try and get an animatable version\n     * of the target. This could be improved to work both ways.\n     */\n    origin = getAnimatableNone(key, target);\n  } else if (isZero(origin) && typeof target === \"string\") {\n    origin = getZeroUnit(target);\n  } else if (!Array.isArray(target) && isZero(target) && typeof origin === \"string\") {\n    target = getZeroUnit(origin);\n  }\n\n  var isOriginAnimatable = isAnimatable(key, origin);\n  heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \".concat(key, \" from \\\"\").concat(origin, \"\\\" to \\\"\").concat(target, \"\\\". \").concat(origin, \" is not an animatable value - to enable this animation set \").concat(origin, \" to a value animatable to \").concat(target, \" via the `style` property.\"));\n\n  function start() {\n    var options = {\n      from: origin,\n      to: target,\n      velocity: value.getVelocity(),\n      onComplete: onComplete,\n      onUpdate: function (v) {\n        return value.set(v);\n      }\n    };\n    return valueTransition.type === \"inertia\" || valueTransition.type === \"decay\" ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition)) : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), {\n      onUpdate: function (v) {\n        var _a;\n\n        options.onUpdate(v);\n        (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n      },\n      onComplete: function () {\n        var _a;\n\n        options.onComplete();\n        (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n      }\n    }));\n  }\n\n  function set() {\n    var _a, _b;\n\n    var finalTarget = resolveFinalValueInKeyframes(target);\n    value.set(finalTarget);\n    onComplete();\n    (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n    return {\n      stop: function () {}\n    };\n  }\n\n  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;\n}\n\nfunction isZero(value) {\n  return value === 0 || typeof value === \"string\" && parseFloat(value) === 0 && value.indexOf(\" \") === -1;\n}\n\nfunction getZeroUnit(potentialUnitType) {\n  return typeof potentialUnitType === \"number\" ? 0 : getAnimatableNone(\"\", potentialUnitType);\n}\n\nfunction getValueTransition(transition, key) {\n  return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n *\n * @internal\n */\n\n\nfunction startAnimation(key, value, target, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n\n  if (instantAnimationState.current) {\n    transition = {\n      type: false\n    };\n  }\n\n  return value.start(function (onComplete) {\n    var delayTimer;\n    var controls;\n    var animation = getAnimation(key, value, target, transition, onComplete);\n    var delay = getDelayFromTransition(transition, key);\n\n    var start = function () {\n      return controls = animation();\n    };\n\n    if (delay) {\n      delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n    } else {\n      start();\n    }\n\n    return function () {\n      clearTimeout(delayTimer);\n      controls === null || controls === void 0 ? void 0 : controls.stop();\n    };\n  });\n}\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\n\n\nfunction animate(from, to, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n\n  var value = isMotionValue(from) ? from : motionValue(from);\n  startAnimation(\"\", value, to, transition);\n  return {\n    stop: function () {\n      return value.stop();\n    },\n    isAnimating: function () {\n      return value.isAnimating();\n    }\n  };\n}\n\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\n\nvar asNumber = function (value) {\n  return typeof value === \"string\" ? parseFloat(value) : value;\n};\n\nvar isPx = function (value) {\n  return typeof value === \"number\" || styleValueTypes.px.test(value);\n};\n\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n  var _a, _b, _c, _d;\n\n  if (shouldCrossfadeOpacity) {\n    target.opacity = popmotion.mix(0, // (follow?.opacity as number) ?? 0,\n    // TODO Reinstate this if only child\n    (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n    target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n  } else if (isOnlyMember) {\n    target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n  }\n  /**\n   * Mix border radius\n   */\n\n\n  for (var i = 0; i < numBorders; i++) {\n    var borderLabel = \"border\".concat(borders[i], \"Radius\");\n    var followRadius = getRadius(follow, borderLabel);\n    var leadRadius = getRadius(lead, borderLabel);\n    if (followRadius === undefined && leadRadius === undefined) continue;\n    followRadius || (followRadius = 0);\n    leadRadius || (leadRadius = 0);\n    var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);\n\n    if (canMix) {\n      target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n\n      if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {\n        target[borderLabel] += \"%\";\n      }\n    } else {\n      target[borderLabel] = leadRadius;\n    }\n  }\n  /**\n   * Mix rotation\n   */\n\n\n  if (follow.rotate || lead.rotate) {\n    target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);\n  }\n}\n\nfunction getRadius(values, radiusName) {\n  var _a;\n\n  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n} // /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\n\n\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\n\nfunction compress(min, max, easing) {\n  return function (p) {\n    // Could replace ifs with clamp\n    if (p < min) return 0;\n    if (p > max) return 1;\n    return easing(popmotion.progress(min, max, p));\n  };\n}\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\n\n\nfunction copyAxisInto(axis, originAxis) {\n  axis.min = originAxis.min;\n  axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\n\n\nfunction copyBoxInto(box, originBox) {\n  copyAxisInto(box.x, originBox.x);\n  copyAxisInto(box.y, originBox.y);\n}\n\nfunction isIdentityScale(scale) {\n  return scale === undefined || scale === 1;\n}\n\nfunction hasScale(_a) {\n  var scale = _a.scale,\n      scaleX = _a.scaleX,\n      scaleY = _a.scaleY;\n  return !isIdentityScale(scale) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);\n}\n\nfunction hasTransform(values) {\n  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;\n}\n\nfunction hasTranslate(value) {\n  return value && value !== \"0%\";\n}\n/**\n * Scales a point based on a factor and an originPoint\n */\n\n\nfunction scalePoint(point, scale, originPoint) {\n  var distanceFromOrigin = point - originPoint;\n  var scaled = scale * distanceFromOrigin;\n  return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\n\n\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n  if (boxScale !== undefined) {\n    point = scalePoint(point, boxScale, originPoint);\n  }\n\n  return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\n\n\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\n\n\nfunction applyBoxDelta(box, _a) {\n  var x = _a.x,\n      y = _a.y;\n  applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n  applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\n\n\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {\n  var _a, _b;\n\n  if (isSharedTransition === void 0) {\n    isSharedTransition = false;\n  }\n\n  var treeLength = treePath.length;\n  if (!treeLength) return; // Reset the treeScale\n\n  treeScale.x = treeScale.y = 1;\n  var node;\n  var delta;\n\n  for (var i = 0; i < treeLength; i++) {\n    node = treePath[i];\n    delta = node.projectionDelta;\n    if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\") continue;\n\n    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {\n      transformBox(box, {\n        x: -node.scroll.x,\n        y: -node.scroll.y\n      });\n    }\n\n    if (delta) {\n      // Incoporate each ancestor's scale into a culmulative treeScale for this component\n      treeScale.x *= delta.x.scale;\n      treeScale.y *= delta.y.scale; // Apply each ancestor's calculated delta into this component's recorded layout box\n\n      applyBoxDelta(box, delta);\n    }\n\n    if (isSharedTransition && hasTransform(node.latestValues)) {\n      transformBox(box, node.latestValues);\n    }\n  }\n}\n\nfunction translateAxis(axis, distance) {\n  axis.min = axis.min + distance;\n  axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\n\n\nfunction transformAxis(axis, transforms, _a) {\n  var _b = tslib.__read(_a, 3),\n      key = _b[0],\n      scaleKey = _b[1],\n      originKey = _b[2];\n\n  var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n  var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin); // Apply the axis delta to the final axis\n\n  applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nvar xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\n\nfunction transformBox(box, transform) {\n  transformAxis(box.x, transform, xKeys$1);\n  transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction calcLength(axis) {\n  return axis.max - axis.min;\n}\n\nfunction isNear(value, target, maxDistance) {\n  if (target === void 0) {\n    target = 0;\n  }\n\n  if (maxDistance === void 0) {\n    maxDistance = 0.01;\n  }\n\n  return popmotion.distance(value, target) < maxDistance;\n}\n\nfunction calcAxisDelta(delta, source, target, origin) {\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n\n  delta.origin = origin;\n  delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n  delta.scale = calcLength(target) / calcLength(source);\n  if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale)) delta.scale = 1;\n  delta.translate = popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n  if (isNear(delta.translate) || isNaN(delta.translate)) delta.translate = 0;\n}\n\nfunction calcBoxDelta(delta, source, target, origin) {\n  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\n\nfunction calcRelativeAxis(target, relative, parent) {\n  target.min = parent.min + relative.min;\n  target.max = target.min + calcLength(relative);\n}\n\nfunction calcRelativeBox(target, relative, parent) {\n  calcRelativeAxis(target.x, relative.x, parent.x);\n  calcRelativeAxis(target.y, relative.y, parent.y);\n}\n\nfunction calcRelativeAxisPosition(target, layout, parent) {\n  target.min = layout.min - parent.min;\n  target.max = target.min + calcLength(layout);\n}\n\nfunction calcRelativePosition(target, layout, parent) {\n  calcRelativeAxisPosition(target.x, layout.x, parent.x);\n  calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\n\n\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n  point -= translate;\n  point = scalePoint(point, 1 / scale, originPoint);\n\n  if (boxScale !== undefined) {\n    point = scalePoint(point, 1 / boxScale, originPoint);\n  }\n\n  return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\n\n\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  if (origin === void 0) {\n    origin = 0.5;\n  }\n\n  if (originAxis === void 0) {\n    originAxis = axis;\n  }\n\n  if (sourceAxis === void 0) {\n    sourceAxis = axis;\n  }\n\n  if (styleValueTypes.percent.test(translate)) {\n    translate = parseFloat(translate);\n    var relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);\n    translate = relativeProgress - sourceAxis.min;\n  }\n\n  if (typeof translate !== \"number\") return;\n  var originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);\n  if (axis === originAxis) originPoint -= translate;\n  axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n  axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\n\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n  var _b = tslib.__read(_a, 3),\n      key = _b[0],\n      scaleKey = _b[1],\n      originKey = _b[2];\n\n  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\n\n\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\n\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n  removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n  removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nvar createAxisDelta = function () {\n  return {\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0\n  };\n};\n\nvar createDelta = function () {\n  return {\n    x: createAxisDelta(),\n    y: createAxisDelta()\n  };\n};\n\nvar createAxis = function () {\n  return {\n    min: 0,\n    max: 0\n  };\n};\n\nvar createBox = function () {\n  return {\n    x: createAxis(),\n    y: createAxis()\n  };\n};\n\nfunction isAxisDeltaZero(delta) {\n  return delta.translate === 0 && delta.scale === 1;\n}\n\nfunction isDeltaZero(delta) {\n  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\n\nfunction boxEquals(a, b) {\n  return a.x.min === b.x.min && a.x.max === b.x.max && a.y.min === b.y.min && a.y.max === b.y.max;\n}\n\nvar NodeStack =\n/** @class */\nfunction () {\n  function NodeStack() {\n    this.members = [];\n  }\n\n  NodeStack.prototype.add = function (node) {\n    addUniqueItem(this.members, node);\n    node.scheduleRender();\n  };\n\n  NodeStack.prototype.remove = function (node) {\n    removeItem(this.members, node);\n\n    if (node === this.prevLead) {\n      this.prevLead = undefined;\n    }\n\n    if (node === this.lead) {\n      var prevLead = this.members[this.members.length - 1];\n\n      if (prevLead) {\n        this.promote(prevLead);\n      }\n    }\n  };\n\n  NodeStack.prototype.relegate = function (node) {\n    var indexOfNode = this.members.findIndex(function (member) {\n      return node === member;\n    });\n    if (indexOfNode === 0) return false;\n    /**\n     * Find the next projection node that is present\n     */\n\n    var prevLead;\n\n    for (var i = indexOfNode; i >= 0; i--) {\n      var member = this.members[i];\n\n      if (member.isPresent !== false) {\n        prevLead = member;\n        break;\n      }\n    }\n\n    if (prevLead) {\n      this.promote(prevLead);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  NodeStack.prototype.promote = function (node, preserveFollowOpacity) {\n    var _a;\n\n    var prevLead = this.lead;\n    if (node === prevLead) return;\n    this.prevLead = prevLead;\n    this.lead = node;\n    node.show();\n\n    if (prevLead) {\n      prevLead.instance && prevLead.scheduleRender();\n      node.scheduleRender();\n      node.resumeFrom = prevLead;\n\n      if (preserveFollowOpacity) {\n        node.resumeFrom.preserveOpacity = true;\n      }\n\n      if (prevLead.snapshot) {\n        node.snapshot = prevLead.snapshot;\n        node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;\n        node.snapshot.isShared = true;\n      }\n\n      if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n        node.isLayoutDirty = true;\n      }\n\n      var crossfade = node.options.crossfade;\n\n      if (crossfade === false) {\n        prevLead.hide();\n      }\n      /**\n       * TODO:\n       *   - Test border radius when previous node was deleted\n       *   - boxShadow mixing\n       *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n       *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n       *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n       * ---\n       *   - Crossfade opacity of root nodes\n       *   - layoutId changes after animation\n       *   - layoutId changes mid animation\n       */\n\n    }\n  };\n\n  NodeStack.prototype.exitAnimationComplete = function () {\n    this.members.forEach(function (node) {\n      var _a, _b, _c, _d, _e;\n\n      (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n      (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n    });\n  };\n\n  NodeStack.prototype.scheduleRender = function () {\n    this.members.forEach(function (node) {\n      node.instance && node.scheduleRender(false);\n    });\n  };\n  /**\n   * Clear any leads that have been removed this render to prevent them from being\n   * used in future animations and to prevent memory leaks\n   */\n\n\n  NodeStack.prototype.removeLeadSnapshot = function () {\n    if (this.lead && this.lead.snapshot) {\n      this.lead.snapshot = undefined;\n    }\n  };\n\n  return NodeStack;\n}();\n\nvar scaleCorrectors = {};\n\nfunction addScaleCorrector(correctors) {\n  Object.assign(scaleCorrectors, correctors);\n}\n\nvar identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1)\";\n\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n  /**\n   * The translations we use to calculate are always relative to the viewport coordinate space.\n   * But when we apply scales, we also scale the coordinate space of an element and its children.\n   * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n   * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n   */\n  var xTranslate = delta.x.translate / treeScale.x;\n  var yTranslate = delta.y.translate / treeScale.y;\n  var transform = \"translate3d(\".concat(xTranslate, \"px, \").concat(yTranslate, \"px, 0) \");\n\n  if (latestTransform) {\n    var rotate = latestTransform.rotate,\n        rotateX = latestTransform.rotateX,\n        rotateY = latestTransform.rotateY;\n    if (rotate) transform += \"rotate(\".concat(rotate, \"deg) \");\n    if (rotateX) transform += \"rotateX(\".concat(rotateX, \"deg) \");\n    if (rotateY) transform += \"rotateY(\".concat(rotateY, \"deg) \");\n  }\n\n  transform += \"scale(\".concat(delta.x.scale, \", \").concat(delta.y.scale, \")\");\n  return transform === identityProjection ? \"none\" : transform;\n}\n\nfunction eachAxis(callback) {\n  return [callback(\"x\"), callback(\"y\")];\n}\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\n\n\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\n\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\n\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n  return transformAxes.forEach(function (axesKey) {\n    return transformProps.push(operationKey + axesKey);\n  });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\n\nfunction sortTransformProps(a, b) {\n  return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\n\n\nvar transformPropSet = new Set(transformProps);\n\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\n\n\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\n\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\n\nvar compareByDepth = function (a, b) {\n  return a.depth - b.depth;\n};\n\nvar FlatTree =\n/** @class */\nfunction () {\n  function FlatTree() {\n    this.children = [];\n    this.isDirty = false;\n  }\n\n  FlatTree.prototype.add = function (child) {\n    addUniqueItem(this.children, child);\n    this.isDirty = true;\n  };\n\n  FlatTree.prototype.remove = function (child) {\n    removeItem(this.children, child);\n    this.isDirty = true;\n  };\n\n  FlatTree.prototype.forEach = function (callback) {\n    this.isDirty && this.children.sort(compareByDepth);\n    this.isDirty = false;\n    this.children.forEach(callback);\n  };\n\n  return FlatTree;\n}();\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\n\n\nfunction resolveMotionValue(value) {\n  var unwrappedValue = isMotionValue(value) ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\n\n\nvar animationTarget = 1000;\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\n\nvar globalProjectionState = {\n  /**\n   * Global flag as to whether the tree has animated since the last time\n   * we resized the window\n   */\n  hasAnimatedSinceResize: true,\n\n  /**\n   * We set this to true once, on the first update. Any nodes added to the tree beyond that\n   * update will be given a `data-projection-id` attribute.\n   */\n  hasEverUpdated: false\n};\n\nfunction createProjectionNode(_a) {\n  var attachResizeListener = _a.attachResizeListener,\n      defaultParent = _a.defaultParent,\n      measureScroll = _a.measureScroll,\n      resetTransform = _a.resetTransform;\n  return (\n    /** @class */\n    function () {\n      function ProjectionNode(id, latestValues, parent) {\n        var _this = this;\n\n        if (latestValues === void 0) {\n          latestValues = {};\n        }\n\n        if (parent === void 0) {\n          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();\n        }\n        /**\n         * A Set containing all this component's children. This is used to iterate\n         * through the children.\n         *\n         * TODO: This could be faster to iterate as a flat array stored on the root node.\n         */\n\n\n        this.children = new Set();\n        /**\n         * Options for the node. We use this to configure what kind of layout animations\n         * we should perform (if any).\n         */\n\n        this.options = {};\n        /**\n         * We use this to detect when its safe to shut down part of a projection tree.\n         * We have to keep projecting children for scale correction and relative projection\n         * until all their parents stop performing layout animations.\n         */\n\n        this.isTreeAnimating = false;\n        this.isAnimationBlocked = false;\n        /**\n         * Flag to true if we think this layout has been changed. We can't always know this,\n         * currently we set it to true every time a component renders, or if it has a layoutDependency\n         * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n         * and if one node is dirtied, they all are.\n         */\n\n        this.isLayoutDirty = false;\n        /**\n         * Block layout updates for instant layout transitions throughout the tree.\n         */\n\n        this.updateManuallyBlocked = false;\n        this.updateBlockedByResize = false;\n        /**\n         * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n         * call.\n         */\n\n        this.isUpdating = false;\n        /**\n         * If this is an SVG element we currently disable projection transforms\n         */\n\n        this.isSVG = false;\n        /**\n         * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n         * its projection styles.\n         */\n\n        this.needsReset = false;\n        /**\n         * Flags whether this node should have its transform reset prior to measuring.\n         */\n\n        this.shouldResetTransform = false;\n        /**\n         * An object representing the calculated contextual/accumulated/tree scale.\n         * This will be used to scale calculcated projection transforms, as these are\n         * calculated in screen-space but need to be scaled for elements to actually\n         * make it to their calculated destinations.\n         *\n         * TODO: Lazy-init\n         */\n\n        this.treeScale = {\n          x: 1,\n          y: 1\n        };\n        /**\n         *\n         */\n\n        this.eventHandlers = new Map(); // Note: Currently only running on root node\n\n        this.potentialNodes = new Map();\n\n        this.checkUpdateFailed = function () {\n          if (_this.isUpdating) {\n            _this.isUpdating = false;\n\n            _this.clearAllSnapshots();\n          }\n        };\n\n        this.updateProjection = function () {\n          _this.nodes.forEach(resolveTargetDelta);\n\n          _this.nodes.forEach(calcProjection);\n        };\n\n        this.hasProjected = false;\n        this.isVisible = true;\n        /**\n         * Animation\n         */\n\n        this.animationProgress = 0;\n        /**\n         * Shared layout\n         */\n        // TODO Only running on root node\n\n        this.sharedNodes = new Map();\n        this.id = id;\n        this.latestValues = latestValues;\n        this.root = parent ? parent.root || parent : this;\n        this.path = parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path), false), [parent], false) : [];\n        this.parent = parent;\n        this.depth = parent ? parent.depth + 1 : 0;\n        id && this.root.registerPotentialNode(id, this);\n\n        for (var i = 0; i < this.path.length; i++) {\n          this.path[i].shouldResetTransform = true;\n        }\n\n        if (this.root === this) this.nodes = new FlatTree();\n      }\n\n      ProjectionNode.prototype.addEventListener = function (name, handler) {\n        if (!this.eventHandlers.has(name)) {\n          this.eventHandlers.set(name, new SubscriptionManager());\n        }\n\n        return this.eventHandlers.get(name).add(handler);\n      };\n\n      ProjectionNode.prototype.notifyListeners = function (name) {\n        var args = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          args[_i - 1] = arguments[_i];\n        }\n\n        var subscriptionManager = this.eventHandlers.get(name);\n        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, tslib.__spreadArray([], tslib.__read(args), false));\n      };\n\n      ProjectionNode.prototype.hasListeners = function (name) {\n        return this.eventHandlers.has(name);\n      };\n\n      ProjectionNode.prototype.registerPotentialNode = function (id, node) {\n        this.potentialNodes.set(id, node);\n      };\n      /**\n       * Lifecycles\n       */\n\n\n      ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {\n        var _this = this;\n\n        var _a;\n\n        if (isLayoutDirty === void 0) {\n          isLayoutDirty = false;\n        }\n\n        if (this.instance) return;\n        this.isSVG = instance instanceof SVGElement && instance.tagName !== \"svg\";\n        this.instance = instance;\n        var _b = this.options,\n            layoutId = _b.layoutId,\n            layout = _b.layout,\n            visualElement = _b.visualElement;\n\n        if (visualElement && !visualElement.getInstance()) {\n          visualElement.mount(instance);\n        }\n\n        this.root.nodes.add(this);\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n        this.id && this.root.potentialNodes.delete(this.id);\n\n        if (isLayoutDirty && (layout || layoutId)) {\n          this.isLayoutDirty = true;\n        }\n\n        if (attachResizeListener) {\n          var unblockTimeout_1;\n\n          var resizeUnblockUpdate_1 = function () {\n            return _this.root.updateBlockedByResize = false;\n          };\n\n          attachResizeListener(instance, function () {\n            _this.root.updateBlockedByResize = true;\n            clearTimeout(unblockTimeout_1);\n            unblockTimeout_1 = setTimeout(resizeUnblockUpdate_1, 250);\n\n            if (globalProjectionState.hasAnimatedSinceResize) {\n              globalProjectionState.hasAnimatedSinceResize = false;\n\n              _this.nodes.forEach(finishAnimation);\n            }\n          });\n        }\n\n        if (layoutId) {\n          this.root.registerSharedNode(layoutId, this);\n        } // Only register the handler if it requires layout animation\n\n\n        if (this.options.animate !== false && visualElement && (layoutId || layout)) {\n          this.addEventListener(\"didUpdate\", function (_a) {\n            var _b, _c, _d, _e, _f;\n\n            var delta = _a.delta,\n                hasLayoutChanged = _a.hasLayoutChanged,\n                hasRelativeTargetChanged = _a.hasRelativeTargetChanged,\n                newLayout = _a.layout;\n\n            if (_this.isTreeAnimationBlocked()) {\n              _this.target = undefined;\n              _this.relativeTarget = undefined;\n              return;\n            } // TODO: Check here if an animation exists\n\n\n            var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;\n            var onLayoutAnimationComplete = visualElement.getProps().onLayoutAnimationComplete;\n            /**\n             * The target layout of the element might stay the same,\n             * but its position relative to its parent has changed.\n             */\n\n            var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;\n            /**\n             * If the layout hasn't seemed to have changed, it might be that the\n             * element is visually in the same place in the document but its position\n             * relative to its parent has indeed changed. So here we check for that.\n             */\n\n            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n\n            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {\n              if (_this.resumeFrom) {\n                _this.resumingFrom = _this.resumeFrom;\n                _this.resumingFrom.resumingFrom = undefined;\n              }\n\n              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n\n              _this.startAnimation(tslib.__assign(tslib.__assign({}, getValueTransition(layoutTransition, \"layout\")), {\n                onComplete: onLayoutAnimationComplete\n              }));\n            } else {\n              _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));\n            }\n\n            _this.targetLayout = newLayout;\n          });\n        }\n      };\n\n      ProjectionNode.prototype.unmount = function () {\n        var _a, _b;\n\n        this.options.layoutId && this.willUpdate();\n        this.root.nodes.remove(this);\n        (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n        this.instance = undefined;\n        sync.cancelSync.preRender(this.updateProjection);\n      }; // only on the root\n\n\n      ProjectionNode.prototype.blockUpdate = function () {\n        this.updateManuallyBlocked = true;\n      };\n\n      ProjectionNode.prototype.unblockUpdate = function () {\n        this.updateManuallyBlocked = false;\n      };\n\n      ProjectionNode.prototype.isUpdateBlocked = function () {\n        return this.updateManuallyBlocked || this.updateBlockedByResize;\n      };\n\n      ProjectionNode.prototype.isTreeAnimationBlocked = function () {\n        var _a;\n\n        return this.isAnimationBlocked || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) || false;\n      }; // Note: currently only running on root node\n\n\n      ProjectionNode.prototype.startUpdate = function () {\n        var _a;\n\n        if (this.isUpdateBlocked()) return;\n        this.isUpdating = true;\n        (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n      };\n\n      ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {\n        var _a, _b, _c;\n\n        if (shouldNotifyListeners === void 0) {\n          shouldNotifyListeners = true;\n        }\n\n        if (this.root.isUpdateBlocked()) {\n          (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n          return;\n        }\n\n        !this.root.isUpdating && this.root.startUpdate();\n        if (this.isLayoutDirty) return;\n        this.isLayoutDirty = true;\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          node.shouldResetTransform = true;\n          /**\n           * TODO: Check we haven't updated the scroll\n           * since the last didUpdate\n           */\n\n          node.updateScroll();\n        }\n\n        var _d = this.options,\n            layoutId = _d.layoutId,\n            layout = _d.layout;\n        if (layoutId === undefined && !layout) return;\n        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n        this.updateSnapshot();\n        shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n      }; // Note: Currently only running on root node\n\n\n      ProjectionNode.prototype.didUpdate = function () {\n        var updateWasBlocked = this.isUpdateBlocked(); // When doing an instant transition, we skip the layout update,\n        // but should still clean up the measurements so that the next\n        // snapshot could be taken correctly.\n\n        if (updateWasBlocked) {\n          this.unblockUpdate();\n          this.clearAllSnapshots();\n          this.nodes.forEach(clearMeasurements);\n          return;\n        }\n\n        if (!this.isUpdating) return;\n        this.isUpdating = false;\n        /**\n         * Search for and mount newly-added projection elements.\n         *\n         * TODO: Every time a new component is rendered we could search up the tree for\n         * the closest mounted node and query from there rather than document.\n         */\n\n        if (this.potentialNodes.size) {\n          this.potentialNodes.forEach(mountNodeEarly);\n          this.potentialNodes.clear();\n        }\n        /**\n         * Write\n         */\n\n\n        this.nodes.forEach(resetTransformStyle);\n        /**\n         * Read ==================\n         */\n        // Update layout measurements of updated children\n\n        this.nodes.forEach(updateLayout);\n        /**\n         * Write\n         */\n        // Notify listeners that the layout is updated\n\n        this.nodes.forEach(notifyLayoutUpdate);\n        this.clearAllSnapshots(); // Flush any scheduled updates\n\n        sync.flushSync.update();\n        sync.flushSync.preRender();\n        sync.flushSync.render();\n      };\n\n      ProjectionNode.prototype.clearAllSnapshots = function () {\n        this.nodes.forEach(clearSnapshot);\n        this.sharedNodes.forEach(removeLeadSnapshots);\n      };\n\n      ProjectionNode.prototype.scheduleUpdateProjection = function () {\n        sync__default[\"default\"].preRender(this.updateProjection, false, true);\n      };\n\n      ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {\n        var _this = this;\n        /**\n         * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n         * we manually call didUpdate to give a chance to the siblings to animate.\n         * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n         */\n\n\n        sync__default[\"default\"].postRender(function () {\n          if (_this.isLayoutDirty) {\n            _this.root.didUpdate();\n          } else {\n            _this.root.checkUpdateFailed();\n          }\n        });\n      };\n      /**\n       * Update measurements\n       */\n\n\n      ProjectionNode.prototype.updateSnapshot = function () {\n        if (this.snapshot || !this.instance) return;\n        var measured = this.measure();\n        var layout = this.removeTransform(this.removeElementScroll(measured));\n        roundBox(layout);\n        this.snapshot = {\n          measured: measured,\n          layout: layout,\n          latestValues: {}\n        };\n      };\n\n      ProjectionNode.prototype.updateLayout = function () {\n        var _a;\n\n        if (!this.instance) return; // TODO: Incorporate into a forwarded scroll offset\n\n        this.updateScroll();\n\n        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {\n          return;\n        }\n        /**\n         * When a node is mounted, it simply resumes from the prevLead's\n         * snapshot instead of taking a new one, but the ancestors scroll\n         * might have updated while the prevLead is unmounted. We need to\n         * update the scroll again to make sure the layout we measure is\n         * up to date.\n         */\n\n\n        if (this.resumeFrom && !this.resumeFrom.instance) {\n          for (var i = 0; i < this.path.length; i++) {\n            var node = this.path[i];\n            node.updateScroll();\n          }\n        }\n\n        var measured = this.measure();\n        roundBox(measured);\n        var prevLayout = this.layout;\n        this.layout = {\n          measured: measured,\n          actual: this.removeElementScroll(measured)\n        };\n        this.layoutCorrected = createBox();\n        this.isLayoutDirty = false;\n        this.projectionDelta = undefined;\n        this.notifyListeners(\"measure\", this.layout.actual);\n        (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n      };\n\n      ProjectionNode.prototype.updateScroll = function () {\n        if (this.options.layoutScroll && this.instance) {\n          this.scroll = measureScroll(this.instance);\n        }\n      };\n\n      ProjectionNode.prototype.resetTransform = function () {\n        var _a;\n\n        if (!resetTransform) return;\n        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n        var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n        var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n\n        if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {\n          resetTransform(this.instance, transformTemplateValue);\n          this.shouldResetTransform = false;\n          this.scheduleRender();\n        }\n      };\n\n      ProjectionNode.prototype.measure = function () {\n        var visualElement = this.options.visualElement;\n        if (!visualElement) return createBox();\n        var box = visualElement.measureViewportBox(); // Remove viewport scroll to give page-relative coordinates\n\n        var scroll = this.root.scroll;\n\n        if (scroll) {\n          translateAxis(box.x, scroll.x);\n          translateAxis(box.y, scroll.y);\n        }\n\n        return box;\n      };\n\n      ProjectionNode.prototype.removeElementScroll = function (box) {\n        var boxWithoutScroll = createBox();\n        copyBoxInto(boxWithoutScroll, box);\n        /**\n         * Performance TODO: Keep a cumulative scroll offset down the tree\n         * rather than loop back up the path.\n         */\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          var scroll_1 = node.scroll,\n              options = node.options;\n\n          if (node !== this.root && scroll_1 && options.layoutScroll) {\n            translateAxis(boxWithoutScroll.x, scroll_1.x);\n            translateAxis(boxWithoutScroll.y, scroll_1.y);\n          }\n        }\n\n        return boxWithoutScroll;\n      };\n\n      ProjectionNode.prototype.applyTransform = function (box, transformOnly) {\n        if (transformOnly === void 0) {\n          transformOnly = false;\n        }\n\n        var withTransforms = createBox();\n        copyBoxInto(withTransforms, box);\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n\n          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {\n            transformBox(withTransforms, {\n              x: -node.scroll.x,\n              y: -node.scroll.y\n            });\n          }\n\n          if (!hasTransform(node.latestValues)) continue;\n          transformBox(withTransforms, node.latestValues);\n        }\n\n        if (hasTransform(this.latestValues)) {\n          transformBox(withTransforms, this.latestValues);\n        }\n\n        return withTransforms;\n      };\n\n      ProjectionNode.prototype.removeTransform = function (box) {\n        var _a;\n\n        var boxWithoutTransform = createBox();\n        copyBoxInto(boxWithoutTransform, box);\n\n        for (var i = 0; i < this.path.length; i++) {\n          var node = this.path[i];\n          if (!node.instance) continue;\n          if (!hasTransform(node.latestValues)) continue;\n          hasScale(node.latestValues) && node.updateSnapshot();\n          var sourceBox = createBox();\n          var nodeBox = node.measure();\n          copyBoxInto(sourceBox, nodeBox);\n          removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n        }\n\n        if (hasTransform(this.latestValues)) {\n          removeBoxTransforms(boxWithoutTransform, this.latestValues);\n        }\n\n        return boxWithoutTransform;\n      };\n      /**\n       *\n       */\n\n\n      ProjectionNode.prototype.setTargetDelta = function (delta) {\n        this.targetDelta = delta;\n        this.root.scheduleUpdateProjection();\n      };\n\n      ProjectionNode.prototype.setOptions = function (options) {\n        var _a;\n\n        this.options = tslib.__assign(tslib.__assign(tslib.__assign({}, this.options), options), {\n          crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true\n        });\n      };\n\n      ProjectionNode.prototype.clearMeasurements = function () {\n        this.scroll = undefined;\n        this.layout = undefined;\n        this.snapshot = undefined;\n        this.prevTransformTemplateValue = undefined;\n        this.targetDelta = undefined;\n        this.target = undefined;\n        this.isLayoutDirty = false;\n      };\n      /**\n       * Frame calculations\n       */\n\n\n      ProjectionNode.prototype.resolveTargetDelta = function () {\n        var _a;\n\n        var _b = this.options,\n            layout = _b.layout,\n            layoutId = _b.layoutId;\n        /**\n         * If we have no layout, we can't perform projection, so early return\n         */\n\n        if (!this.layout || !(layout || layoutId)) return;\n        /**\n         * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n         * a relativeParent. This will allow a component to perform scale correction\n         * even if no animation has started.\n         */\n        // TODO If this is unsuccessful this currently happens every frame\n\n        if (!this.targetDelta && !this.relativeTarget) {\n          // TODO: This is a semi-repetition of further down this function, make DRY\n          this.relativeParent = this.getClosestProjectingParent();\n\n          if (this.relativeParent && this.relativeParent.layout) {\n            this.relativeTarget = createBox();\n            this.relativeTargetOrigin = createBox();\n            calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n          }\n        }\n        /**\n         * If we have no relative target or no target delta our target isn't valid\n         * for this frame.\n         */\n\n\n        if (!this.relativeTarget && !this.targetDelta) return;\n        /**\n         * Lazy-init target data structure\n         */\n\n        if (!this.target) {\n          this.target = createBox();\n          this.targetWithTransforms = createBox();\n        }\n        /**\n         * If we've got a relative box for this component, resolve it into a target relative to the parent.\n         */\n\n\n        if (this.relativeTarget && this.relativeTargetOrigin && ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n          calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n          /**\n           * If we've only got a targetDelta, resolve it into a target\n           */\n        } else if (this.targetDelta) {\n          if (Boolean(this.resumingFrom)) {\n            // TODO: This is creating a new object every frame\n            this.target = this.applyTransform(this.layout.actual);\n          } else {\n            copyBoxInto(this.target, this.layout.actual);\n          }\n\n          applyBoxDelta(this.target, this.targetDelta);\n        } else {\n          /**\n           * If no target, use own layout as target\n           */\n          copyBoxInto(this.target, this.layout.actual);\n        }\n        /**\n         * If we've been told to attempt to resolve a relative target, do so.\n         */\n\n\n        if (this.attemptToResolveRelativeTarget) {\n          this.attemptToResolveRelativeTarget = false;\n          this.relativeParent = this.getClosestProjectingParent();\n\n          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {\n            this.relativeTarget = createBox();\n            this.relativeTargetOrigin = createBox();\n            calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n          }\n        }\n      };\n\n      ProjectionNode.prototype.getClosestProjectingParent = function () {\n        if (!this.parent || hasTransform(this.parent.latestValues)) return undefined;\n\n        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {\n          return this.parent;\n        } else {\n          return this.parent.getClosestProjectingParent();\n        }\n      };\n\n      ProjectionNode.prototype.calcProjection = function () {\n        var _a;\n\n        var _b = this.options,\n            layout = _b.layout,\n            layoutId = _b.layoutId;\n        /**\n         * If this section of the tree isn't animating we can\n         * delete our target sources for the following frame.\n         */\n\n        this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);\n\n        if (!this.isTreeAnimating) {\n          this.targetDelta = this.relativeTarget = undefined;\n        }\n\n        if (!this.layout || !(layout || layoutId)) return;\n        var lead = this.getLead();\n        /**\n         * Reset the corrected box with the latest values from box, as we're then going\n         * to perform mutative operations on it.\n         */\n\n        copyBoxInto(this.layoutCorrected, this.layout.actual);\n        /**\n         * Apply all the parent deltas to this box to produce the corrected box. This\n         * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n         */\n\n        applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n        var target = lead.target;\n        if (!target) return;\n\n        if (!this.projectionDelta) {\n          this.projectionDelta = createDelta();\n          this.projectionDeltaWithTransform = createDelta();\n        }\n\n        var prevTreeScaleX = this.treeScale.x;\n        var prevTreeScaleY = this.treeScale.y;\n        var prevProjectionTransform = this.projectionTransform;\n        /**\n         * Update the delta between the corrected box and the target box before user-set transforms were applied.\n         * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n         * for our layout reprojection, but still allow them to be scaled correctly by the user.\n         * It might be that to simplify this we may want to accept that user-set scale is also corrected\n         * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n         * to allow people to choose whether these styles are corrected based on just the\n         * layout reprojection or the final bounding box.\n         */\n\n        calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n        this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n\n        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {\n          this.hasProjected = true;\n          this.scheduleRender();\n          this.notifyListeners(\"projectionUpdate\", target);\n        }\n      };\n\n      ProjectionNode.prototype.hide = function () {\n        this.isVisible = false; // TODO: Schedule render\n      };\n\n      ProjectionNode.prototype.show = function () {\n        this.isVisible = true; // TODO: Schedule render\n      };\n\n      ProjectionNode.prototype.scheduleRender = function (notifyAll) {\n        var _a, _b, _c;\n\n        if (notifyAll === void 0) {\n          notifyAll = true;\n        }\n\n        (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n\n        if (this.resumingFrom && !this.resumingFrom.instance) {\n          this.resumingFrom = undefined;\n        }\n      };\n\n      ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {\n        var _this = this;\n\n        var _a;\n\n        if (hasOnlyRelativeTargetChanged === void 0) {\n          hasOnlyRelativeTargetChanged = false;\n        }\n\n        var snapshot = this.snapshot;\n        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n\n        var mixedValues = tslib.__assign({}, this.latestValues);\n\n        var targetDelta = createDelta();\n        this.relativeTarget = this.relativeTargetOrigin = undefined;\n        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n        var relativeLayout = createBox();\n        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n        var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));\n\n        this.mixTargetDelta = function (latest) {\n          var _a;\n\n          var progress = latest / 1000;\n          mixAxisDelta(targetDelta.x, delta.x, progress);\n          mixAxisDelta(targetDelta.y, delta.y, progress);\n\n          _this.setTargetDelta(targetDelta);\n\n          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n            calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);\n            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);\n          }\n\n          if (isSharedLayoutAnimation) {\n            _this.animationValues = mixedValues;\n            mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n          }\n\n          _this.root.scheduleUpdateProjection();\n\n          _this.scheduleRender();\n        };\n\n        this.mixTargetDelta(0);\n      };\n\n      ProjectionNode.prototype.startAnimation = function (options) {\n        var _this = this;\n\n        var _a, _b;\n\n        (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n\n        if (this.resumingFrom) {\n          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n\n        if (this.pendingAnimation) {\n          sync.cancelSync.update(this.pendingAnimation);\n          this.pendingAnimation = undefined;\n        }\n        /**\n         * Start the animation in the next frame to have a frame with progress 0,\n         * where the target is the same as when the animation started, so we can\n         * calculate the relative positions correctly for instant transitions.\n         */\n\n\n        this.pendingAnimation = sync__default[\"default\"].update(function () {\n          globalProjectionState.hasAnimatedSinceResize = true;\n          _this.currentAnimation = animate(0, animationTarget, tslib.__assign(tslib.__assign({}, options), {\n            onUpdate: function (latest) {\n              var _a;\n\n              _this.mixTargetDelta(latest);\n\n              (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n            },\n            onComplete: function () {\n              var _a;\n\n              (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n\n              _this.completeAnimation();\n            }\n          }));\n\n          if (_this.resumingFrom) {\n            _this.resumingFrom.currentAnimation = _this.currentAnimation;\n          }\n\n          _this.pendingAnimation = undefined;\n        });\n      };\n\n      ProjectionNode.prototype.completeAnimation = function () {\n        var _a;\n\n        if (this.resumingFrom) {\n          this.resumingFrom.currentAnimation = undefined;\n          this.resumingFrom.preserveOpacity = undefined;\n        }\n\n        (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n        this.resumingFrom = this.currentAnimation = this.animationValues = undefined;\n        this.notifyListeners(\"animationComplete\");\n      };\n\n      ProjectionNode.prototype.finishAnimation = function () {\n        var _a;\n\n        if (this.currentAnimation) {\n          (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n          this.currentAnimation.stop();\n        }\n\n        this.completeAnimation();\n      };\n\n      ProjectionNode.prototype.applyTransformsToTarget = function () {\n        var _a = this.getLead(),\n            targetWithTransforms = _a.targetWithTransforms,\n            target = _a.target,\n            layout = _a.layout,\n            latestValues = _a.latestValues;\n\n        if (!targetWithTransforms || !target || !layout) return;\n        copyBoxInto(targetWithTransforms, target);\n        /**\n         * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n         * This is the final box that we will then project into by calculating a transform delta and\n         * applying it to the corrected box.\n         */\n\n        transformBox(targetWithTransforms, latestValues);\n        /**\n         * Update the delta between the corrected box and the final target box, after\n         * user-set transforms are applied to it. This will be used by the renderer to\n         * create a transform style that will reproject the element from its actual layout\n         * into the desired bounding box.\n         */\n\n        calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n      };\n\n      ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {\n        var _a, _b, _c;\n\n        if (!this.sharedNodes.has(layoutId)) {\n          this.sharedNodes.set(layoutId, new NodeStack());\n        }\n\n        var stack = this.sharedNodes.get(layoutId);\n        stack.add(node);\n        node.promote({\n          transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)\n        });\n      };\n\n      ProjectionNode.prototype.isLead = function () {\n        var stack = this.getStack();\n        return stack ? stack.lead === this : true;\n      };\n\n      ProjectionNode.prototype.getLead = function () {\n        var _a;\n\n        var layoutId = this.options.layoutId;\n        return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n      };\n\n      ProjectionNode.prototype.getPrevLead = function () {\n        var _a;\n\n        var layoutId = this.options.layoutId;\n        return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n      };\n\n      ProjectionNode.prototype.getStack = function () {\n        var layoutId = this.options.layoutId;\n        if (layoutId) return this.root.sharedNodes.get(layoutId);\n      };\n\n      ProjectionNode.prototype.promote = function (_a) {\n        var _b = _a === void 0 ? {} : _a,\n            needsReset = _b.needsReset,\n            transition = _b.transition,\n            preserveFollowOpacity = _b.preserveFollowOpacity;\n\n        var stack = this.getStack();\n        if (stack) stack.promote(this, preserveFollowOpacity);\n\n        if (needsReset) {\n          this.projectionDelta = undefined;\n          this.needsReset = true;\n        }\n\n        if (transition) this.setOptions({\n          transition: transition\n        });\n      };\n\n      ProjectionNode.prototype.relegate = function () {\n        var stack = this.getStack();\n\n        if (stack) {\n          return stack.relegate(this);\n        } else {\n          return false;\n        }\n      };\n\n      ProjectionNode.prototype.resetRotation = function () {\n        var visualElement = this.options.visualElement;\n        if (!visualElement) return; // If there's no detected rotation values, we can early return without a forced render.\n\n        var hasRotate = false; // Keep a record of all the values we've reset\n\n        var resetValues = {}; // Check the rotate value of all axes and reset to 0\n\n        for (var i = 0; i < transformAxes.length; i++) {\n          var axis = transformAxes[i];\n          var key = \"rotate\" + axis; // If this rotation doesn't exist as a motion value, then we don't\n          // need to reset it\n\n          if (!visualElement.getStaticValue(key)) {\n            continue;\n          }\n\n          hasRotate = true; // Record the rotation and then temporarily set it to 0\n\n          resetValues[key] = visualElement.getStaticValue(key);\n          visualElement.setStaticValue(key, 0);\n        } // If there's no rotation values, we don't need to do any more.\n\n\n        if (!hasRotate) return; // Force a render of this element to apply the transform with all rotations\n        // set to 0.\n\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender(); // Put back all the values we reset\n\n        for (var key in resetValues) {\n          visualElement.setStaticValue(key, resetValues[key]);\n        } // Schedule a render for the next frame. This ensures we won't visually\n        // see the element with the reset rotate value applied.\n\n\n        visualElement.scheduleRender();\n      };\n\n      ProjectionNode.prototype.getProjectionStyles = function (styleProp) {\n        var _a, _b, _c, _d, _e, _f;\n\n        if (styleProp === void 0) {\n          styleProp = {};\n        } // TODO: Return lifecycle-persistent object\n\n\n        var styles = {};\n        if (!this.instance || this.isSVG) return styles;\n\n        if (!this.isVisible) {\n          return {\n            visibility: \"hidden\"\n          };\n        } else {\n          styles.visibility = \"\";\n        }\n\n        var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n\n        if (this.needsReset) {\n          this.needsReset = false;\n          styles.opacity = \"\";\n          styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || \"\";\n          styles.transform = transformTemplate ? transformTemplate(this.latestValues, \"\") : \"none\";\n          return styles;\n        }\n\n        var lead = this.getLead();\n\n        if (!this.projectionDelta || !this.layout || !lead.target) {\n          var emptyStyles = {};\n\n          if (this.options.layoutId) {\n            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n            emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || \"\";\n          }\n\n          if (this.hasProjected && !hasTransform(this.latestValues)) {\n            emptyStyles.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n            this.hasProjected = false;\n          }\n\n          return emptyStyles;\n        }\n\n        var valuesToRender = lead.animationValues || lead.latestValues;\n        this.applyTransformsToTarget();\n        styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n\n        if (transformTemplate) {\n          styles.transform = transformTemplate(valuesToRender, styles.transform);\n        }\n\n        var _g = this.projectionDelta,\n            x = _g.x,\n            y = _g.y;\n        styles.transformOrigin = \"\".concat(x.origin * 100, \"% \").concat(y.origin * 100, \"% 0\");\n\n        if (lead.animationValues) {\n          /**\n           * If the lead component is animating, assign this either the entering/leaving\n           * opacity\n           */\n          styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;\n        } else {\n          /**\n           * Or we're not animating at all, set the lead component to its actual\n           * opacity and other components to hidden.\n           */\n          styles.opacity = lead === this ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n        }\n        /**\n         * Apply scale correction\n         */\n\n\n        for (var key in scaleCorrectors) {\n          if (valuesToRender[key] === undefined) continue;\n          var _h = scaleCorrectors[key],\n              correct = _h.correct,\n              applyTo = _h.applyTo;\n          var corrected = correct(valuesToRender[key], lead);\n\n          if (applyTo) {\n            var num = applyTo.length;\n\n            for (var i = 0; i < num; i++) {\n              styles[applyTo[i]] = corrected;\n            }\n          } else {\n            styles[key] = corrected;\n          }\n        }\n        /**\n         * Disable pointer events on follow components. This is to ensure\n         * that if a follow component covers a lead component it doesn't block\n         * pointer events on the lead.\n         */\n\n\n        if (this.options.layoutId) {\n          styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || \"\" : \"none\";\n        }\n\n        return styles;\n      };\n\n      ProjectionNode.prototype.clearSnapshot = function () {\n        this.resumeFrom = this.snapshot = undefined;\n      }; // Only run on root\n\n\n      ProjectionNode.prototype.resetTree = function () {\n        this.root.nodes.forEach(function (node) {\n          var _a;\n\n          return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n        });\n        this.root.nodes.forEach(clearMeasurements);\n        this.root.sharedNodes.clear();\n      };\n\n      return ProjectionNode;\n    }()\n  );\n}\n\nfunction updateLayout(node) {\n  node.updateLayout();\n}\n\nfunction notifyLayoutUpdate(node) {\n  var _a, _b, _c, _d;\n\n  var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n\n  if (node.isLead() && node.layout && snapshot && node.hasListeners(\"didUpdate\")) {\n    var _e = node.layout,\n        layout_1 = _e.actual,\n        measuredLayout = _e.measured; // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n    // animations for instance if layout=\"size\" and an element has only changed position\n\n    if (node.options.animationType === \"size\") {\n      eachAxis(function (axis) {\n        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n        var length = calcLength(axisSnapshot);\n        axisSnapshot.min = layout_1[axis].min;\n        axisSnapshot.max = axisSnapshot.min + length;\n      });\n    } else if (node.options.animationType === \"position\") {\n      eachAxis(function (axis) {\n        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];\n        var length = calcLength(layout_1[axis]);\n        axisSnapshot.max = axisSnapshot.min + length;\n      });\n    }\n\n    var layoutDelta = createDelta();\n    calcBoxDelta(layoutDelta, layout_1, snapshot.layout);\n    var visualDelta = createDelta();\n\n    if (snapshot.isShared) {\n      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n    } else {\n      calcBoxDelta(visualDelta, layout_1, snapshot.layout);\n    }\n\n    var hasLayoutChanged = !isDeltaZero(layoutDelta);\n    var hasRelativeTargetChanged = false;\n\n    if (!node.resumeFrom) {\n      node.relativeParent = node.getClosestProjectingParent();\n      /**\n       * If the relativeParent is itself resuming from a different element then\n       * the relative snapshot is not relavent\n       */\n\n      if (node.relativeParent && !node.relativeParent.resumeFrom) {\n        var _f = node.relativeParent,\n            parentSnapshot = _f.snapshot,\n            parentLayout = _f.layout;\n\n        if (parentSnapshot && parentLayout) {\n          var relativeSnapshot = createBox();\n          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n          var relativeLayout = createBox();\n          calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);\n\n          if (!boxEquals(relativeSnapshot, relativeLayout)) {\n            hasRelativeTargetChanged = true;\n          }\n        }\n      }\n    }\n\n    node.notifyListeners(\"didUpdate\", {\n      layout: layout_1,\n      snapshot: snapshot,\n      delta: visualDelta,\n      layoutDelta: layoutDelta,\n      hasLayoutChanged: hasLayoutChanged,\n      hasRelativeTargetChanged: hasRelativeTargetChanged\n    });\n  } else if (node.isLead()) {\n    (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n  }\n  /**\n   * Clearing transition\n   * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n   * and why we need it at all\n   */\n\n\n  node.options.transition = undefined;\n}\n\nfunction clearSnapshot(node) {\n  node.clearSnapshot();\n}\n\nfunction clearMeasurements(node) {\n  node.clearMeasurements();\n}\n\nfunction resetTransformStyle(node) {\n  node.resetTransform();\n}\n\nfunction finishAnimation(node) {\n  node.finishAnimation();\n  node.targetDelta = node.relativeTarget = node.target = undefined;\n}\n\nfunction resolveTargetDelta(node) {\n  node.resolveTargetDelta();\n}\n\nfunction calcProjection(node) {\n  node.calcProjection();\n}\n\nfunction resetRotation(node) {\n  node.resetRotation();\n}\n\nfunction removeLeadSnapshots(stack) {\n  stack.removeLeadSnapshot();\n}\n\nfunction mixAxisDelta(output, delta, p) {\n  output.translate = popmotion.mix(delta.translate, 0, p);\n  output.scale = popmotion.mix(delta.scale, 1, p);\n  output.origin = delta.origin;\n  output.originPoint = delta.originPoint;\n}\n\nfunction mixAxis(output, from, to, p) {\n  output.min = popmotion.mix(from.min, to.min, p);\n  output.max = popmotion.mix(from.max, to.max, p);\n}\n\nfunction mixBox(output, from, to, p) {\n  mixAxis(output.x, from.x, to.x, p);\n  mixAxis(output.y, from.y, to.y, p);\n}\n\nfunction hasOpacityCrossfade(node) {\n  return node.animationValues && node.animationValues.opacityExit !== undefined;\n}\n\nvar defaultLayoutTransition = {\n  duration: 0.45,\n  ease: [0.4, 0, 0.1, 1]\n};\n\nfunction mountNodeEarly(node, id) {\n  /**\n   * Rather than searching the DOM from document we can search the\n   * path for the deepest mounted ancestor and search from there\n   */\n  var searchNode = node.root;\n\n  for (var i = node.path.length - 1; i >= 0; i--) {\n    if (Boolean(node.path[i].instance)) {\n      searchNode = node.path[i];\n      break;\n    }\n  }\n\n  var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n  var element = searchElement.querySelector(\"[data-projection-id=\\\"\".concat(id, \"\\\"]\"));\n  if (element) node.mount(element, true);\n}\n\nfunction roundAxis(axis) {\n  axis.min = Math.round(axis.min);\n  axis.max = Math.round(axis.max);\n}\n\nfunction roundBox(box) {\n  roundAxis(box.x);\n  roundAxis(box.y);\n}\n\nvar id = 1;\n\nfunction useProjectionId() {\n  return useConstant(function () {\n    if (globalProjectionState.hasEverUpdated) {\n      return id++;\n    }\n  });\n}\n/**\n * @internal\n */\n\n\nvar LayoutGroupContext = React.createContext({});\n/**\n * @internal\n */\n\nvar SwitchLayoutGroupContext = React.createContext({});\n\nfunction useProjection(projectionId, _a, visualElement, ProjectionNodeConstructor) {\n  var _b;\n\n  var layoutId = _a.layoutId,\n      layout = _a.layout,\n      drag = _a.drag,\n      dragConstraints = _a.dragConstraints,\n      layoutScroll = _a.layoutScroll;\n  var initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);\n\n  if (!ProjectionNodeConstructor || !visualElement || (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n    return;\n  }\n\n  visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_b = visualElement.parent) === null || _b === void 0 ? void 0 : _b.projection);\n  visualElement.projection.setOptions({\n    layoutId: layoutId,\n    layout: layout,\n    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n    visualElement: visualElement,\n    scheduleRender: function () {\n      return visualElement.scheduleRender();\n    },\n\n    /**\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\n     * to update by the time layout animations run.\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n     * ensuring it gets called if there's no potential layout animations.\n     *\n     */\n    animationType: typeof layout === \"string\" ? layout : \"both\",\n    initialPromotionConfig: initialPromotionConfig,\n    layoutScroll: layoutScroll\n  });\n}\n\nvar VisualElementHandler =\n/** @class */\nfunction (_super) {\n  tslib.__extends(VisualElementHandler, _super);\n\n  function VisualElementHandler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Update visual element props as soon as we know this update is going to be commited.\n   */\n\n\n  VisualElementHandler.prototype.getSnapshotBeforeUpdate = function () {\n    this.updateProps();\n    return null;\n  };\n\n  VisualElementHandler.prototype.componentDidUpdate = function () {};\n\n  VisualElementHandler.prototype.updateProps = function () {\n    var _a = this.props,\n        visualElement = _a.visualElement,\n        props = _a.props;\n    if (visualElement) visualElement.setProps(props);\n  };\n\n  VisualElementHandler.prototype.render = function () {\n    return this.props.children;\n  };\n\n  return VisualElementHandler;\n}(React__default[\"default\"].Component);\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\n\n\nfunction createMotionComponent(_a) {\n  var preloadedFeatures = _a.preloadedFeatures,\n      createVisualElement = _a.createVisualElement,\n      projectionNodeConstructor = _a.projectionNodeConstructor,\n      useRender = _a.useRender,\n      useVisualState = _a.useVisualState,\n      Component = _a.Component;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n\n  function MotionComponent(props, externalRef) {\n    var layoutId = useLayoutId(props);\n    props = tslib.__assign(tslib.__assign({}, props), {\n      layoutId: layoutId\n    });\n    /**\n     * If we're rendering in a static environment, we only visually update the component\n     * as a result of a React-rerender rather than interactions or animations. This\n     * means we don't need to load additional memory structures like VisualElement,\n     * or any gesture/animation features.\n     */\n\n    var config = React.useContext(MotionConfigContext);\n    var features = null;\n    var context = useCreateMotionContext(props);\n    /**\n     * Create a unique projection ID for this component. If a new component is added\n     * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n     * us to measure it as soon as any layout effect flushes pending layout animations.\n     *\n     * Performance note: It'd be better not to have to search the DOM for these elements.\n     * For newly-entering components it could be enough to only correct treeScale, in which\n     * case we could mount in a scale-correction mode. This wouldn't be enough for\n     * shared element transitions however. Perhaps for those we could revert to a root node\n     * that gets forceRendered and layout animations are triggered on its layout effect.\n     */\n\n    var projectionId = config.isStatic ? undefined : useProjectionId();\n    /**\n     *\n     */\n\n    var visualState = useVisualState(props, config.isStatic);\n\n    if (!config.isStatic && isBrowser) {\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, tslib.__assign(tslib.__assign({}, config), props), createVisualElement);\n      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);\n      /**\n       * Load Motion gesture and animation features. These are rendered as renderless\n       * components so each feature can optionally make use of React lifecycle methods.\n       */\n\n      features = useFeatures(props, context.visualElement, preloadedFeatures);\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n\n\n    return React__namespace.createElement(VisualElementHandler, {\n      visualElement: context.visualElement,\n      props: tslib.__assign(tslib.__assign({}, config), props)\n    }, features, React__namespace.createElement(MotionContext.Provider, {\n      value: context\n    }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement)));\n  }\n\n  return React.forwardRef(MotionComponent);\n}\n\nfunction useLayoutId(_a) {\n  var _b;\n\n  var layoutId = _a.layoutId;\n  var layoutGroupId = (_b = React.useContext(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n/**\n * A list of all valid MotionProps.\n *\n * @internalremarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\n\n\nvar validMotionProps = new Set([\"initial\", \"animate\", \"exit\", \"style\", \"variants\", \"transition\", \"transformTemplate\", \"transformValues\", \"custom\", \"inherit\", \"layout\", \"layoutId\", \"layoutDependency\", \"onLayoutAnimationComplete\", \"onLayoutMeasure\", \"onBeforeLayoutMeasure\", \"onAnimationStart\", \"onAnimationComplete\", \"onUpdate\", \"onDragStart\", \"onDrag\", \"onDragEnd\", \"onMeasureDragConstraints\", \"onDirectionLock\", \"onDragTransitionEnd\", \"drag\", \"dragControls\", \"dragListener\", \"dragConstraints\", \"dragDirectionLock\", \"dragSnapToOrigin\", \"_dragX\", \"_dragY\", \"dragElastic\", \"dragMomentum\", \"dragPropagation\", \"dragTransition\", \"whileDrag\", \"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"onHoverStart\", \"onHoverEnd\", \"whileFocus\", \"whileTap\", \"whileHover\", \"whileInView\", \"onViewportEnter\", \"onViewportLeave\", \"viewport\", \"layoutScroll\"]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\n\nfunction isValidMotionProp(key) {\n  return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) {\n  return !isValidMotionProp(key);\n};\n\nfunction loadExternalIsValidProp(isValidProp) {\n  if (!isValidProp) return; // Explicitly filter our events\n\n  shouldForward = function (key) {\n    return key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n  };\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\n\n\ntry {\n  /**\n   * We attempt to import this package but require won't be defined in esm environments, in that case\n   * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n   * in favour of explicit injection.\n   */\n  loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n} catch (_a) {// We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\n\nfunction filterProps(props, isDom, forwardMotionProps) {\n  var filteredProps = {};\n\n  for (var key in props) {\n    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners\n    props[\"draggable\"] && key.startsWith(\"onDrag\")) {\n      filteredProps[key] = props[key];\n    }\n  }\n\n  return filteredProps;\n}\n\nfunction isAnimationControls(v) {\n  return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n  var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps,\n      createRenderState = _a.createRenderState,\n      onMount = _a.onMount;\n  var state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n\n  if (onMount) {\n    state.mount = function (instance) {\n      return onMount(props, instance, state);\n    };\n  }\n\n  return state;\n}\n\nvar makeUseVisualState = function (config) {\n  return function (props, isStatic) {\n    var context = React.useContext(MotionContext);\n    var presenceContext = React.useContext(PresenceContext);\n    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function () {\n      return makeState(config, props, context, presenceContext);\n    });\n  };\n};\n\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  var values = {};\n  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  var motionValues = scrapeMotionValues(props);\n\n  for (var key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n\n  var initial = props.initial,\n      animate = props.animate;\n  var isControllingVariants = checkIfControllingVariants(props);\n  var isVariantNode = checkIfVariantNode(props);\n\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate !== null && animate !== void 0 ? animate : animate = context.animate;\n  }\n\n  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n  var variantToSet = initialAnimationIsBlocked ? animate : initial;\n\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(function (definition) {\n      var resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n      var transitionEnd = resolved.transitionEnd;\n      resolved.transition;\n\n      var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n\n      for (var key in target) {\n        var valueTarget = target[key];\n\n        if (Array.isArray(valueTarget)) {\n          /**\n           * Take final keyframe if the initial animation is blocked because\n           * we want to initialise at the end of that blocked animation.\n           */\n          var index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n\n      for (var key in transitionEnd) values[key] = transitionEnd[key];\n    });\n  }\n\n  return values;\n}\n\nexports.AnimationType = void 0;\n\n(function (AnimationType) {\n  AnimationType[\"Animate\"] = \"animate\";\n  AnimationType[\"Hover\"] = \"whileHover\";\n  AnimationType[\"Tap\"] = \"whileTap\";\n  AnimationType[\"Drag\"] = \"whileDrag\";\n  AnimationType[\"Focus\"] = \"whileFocus\";\n  AnimationType[\"InView\"] = \"whileInView\";\n  AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    return target.removeEventListener(eventName, handler, options);\n  };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\n\n\nfunction useDomEvent(ref, eventName, handler, options) {\n  React.useEffect(function () {\n    var element = ref.current;\n\n    if (handler && element) {\n      return addDomEvent(element, eventName, handler, options);\n    }\n  }, [ref, eventName, handler, options]);\n}\n\nfunction isMouseEvent(event) {\n  // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n  if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof MouseEvent;\n}\n\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\n\n\nfunction filterPrimaryPointer(eventHandler) {\n  return function (event) {\n    var isMouseEvent = event instanceof MouseEvent;\n    var isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n  var point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction pointFromMouse(point, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\n\nfunction extractEventInfo(event, pointType) {\n  if (pointType === void 0) {\n    pointType = \"page\";\n  }\n\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\n\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n\n  var listener = function (event) {\n    return handler(event, extractEventInfo(event));\n  };\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n}; // We check for event support via functions in case they've been mocked by a testing suite.\n\n\nvar supportsPointerEvents = function () {\n  return isBrowser && window.onpointerdown === null;\n};\n\nvar supportsTouchEvents = function () {\n  return isBrowser && window.ontouchstart === null;\n};\n\nvar supportsMouseEvents = function () {\n  return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\n\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  } else if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  } else if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\n\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction usePointerEvent(ref, eventName, handler, options) {\n  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n  var lock = null;\n  return function () {\n    var openLock = function () {\n      lock = null;\n    };\n\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n\n    return false;\n  };\n}\n\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\n\nfunction getGlobalLock(drag) {\n  var lock = false;\n\n  if (drag === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    var openHorizontal_1 = globalHorizontalLock();\n    var openVertical_1 = globalVerticalLock();\n\n    if (openHorizontal_1 && openVertical_1) {\n      lock = function () {\n        openHorizontal_1();\n        openVertical_1();\n      };\n    } else {\n      // Release the locks because we don't use them\n      if (openHorizontal_1) openHorizontal_1();\n      if (openVertical_1) openVertical_1();\n    }\n  }\n\n  return lock;\n}\n\nfunction isDragActive() {\n  // Check the gesture lock - if we get it, it means no drag gesture is active\n  // and we can safely fire the tap gesture.\n  var openGestureLock = getGlobalLock(true);\n  if (!openGestureLock) return true;\n  openGestureLock();\n  return false;\n}\n\nfunction useUnmountEffect(callback) {\n  return React.useEffect(function () {\n    return function () {\n      return callback();\n    };\n  }, []);\n}\n\nvar makeRenderlessComponent = function (hook) {\n  return function (props) {\n    hook(props);\n    return null;\n  };\n};\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\n\n\nfunction usePresence() {\n  var context = React.useContext(PresenceContext);\n  if (context === null) return [true, null];\n  var isPresent = context.isPresent,\n      onExitComplete = context.onExitComplete,\n      register = context.register; // It's safe to call the following hooks conditionally (after an early return) because the context will always\n  // either be null or non-null for the lifespan of the component.\n  // Replace with useOpaqueId when released in React\n\n  var id = useUniqueId();\n  React.useEffect(function () {\n    return register(id);\n  }, []);\n\n  var safeToRemove = function () {\n    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id);\n  };\n\n  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useIsPresent() {\n  return isPresent(React.useContext(PresenceContext));\n}\n\nfunction isPresent(context) {\n  return context === null ? true : context.isPresent;\n}\n\nvar counter = 0;\n\nvar incrementId = function () {\n  return counter++;\n};\n\nvar useUniqueId = function () {\n  return useConstant(incrementId);\n};\n\nfunction shallowCompare(next, prev) {\n  if (!Array.isArray(prev)) return false;\n  var prevLength = prev.length;\n  if (prevLength !== next.length) return false;\n\n  for (var i = 0; i < prevLength; i++) {\n    if (prev[i] !== next[i]) return false;\n  }\n\n  return true;\n}\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\n\n\nvar isNumericalString = function (v) {\n  return /^\\-?\\d*\\.?\\d+$/.test(v);\n};\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\n\n\nvar isZeroValueString = function (v) {\n  return /^0[^.\\s]+$/.test(v);\n};\n/**\n * Tests a provided value against a ValueType\n */\n\n\nvar testValueType = function (v) {\n  return function (type) {\n    return type.test(v);\n  };\n};\n/**\n * ValueType for \"auto\"\n */\n\n\nvar auto = {\n  test: function (v) {\n    return v === \"auto\";\n  },\n  parse: function (v) {\n    return v;\n  }\n};\n/**\n * A list of value types commonly used for dimensions\n */\n\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\n\nvar findDimensionValueType = function (v) {\n  return dimensionValueTypes.find(testValueType(v));\n};\n/**\n * A list of all ValueTypes\n */\n\n\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes), false), [styleValueTypes.color, styleValueTypes.complex], false);\n/**\n * Tests a value against the list of ValueTypes\n */\n\n\nvar findValueType = function (v) {\n  return valueTypes.find(testValueType(v));\n};\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\n\n\nfunction setMotionValue(visualElement, key, value) {\n  if (visualElement.hasValue(key)) {\n    visualElement.getValue(key).set(value);\n  } else {\n    visualElement.addValue(key, motionValue(value));\n  }\n}\n\nfunction setTarget(visualElement, definition) {\n  var resolved = resolveVariant(visualElement, definition);\n\n  var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {},\n      _b = _a.transitionEnd,\n      transitionEnd = _b === void 0 ? {} : _b;\n\n  _a.transition;\n\n  var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n\n  target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n\n  for (var key in target) {\n    var value = resolveFinalValueInKeyframes(target[key]);\n    setMotionValue(visualElement, key, value);\n  }\n}\n\nfunction setVariants(visualElement, variantLabels) {\n  var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels), false).reverse();\n\n  reversedLabels.forEach(function (key) {\n    var _a;\n\n    var variant = visualElement.getVariant(key);\n    variant && setTarget(visualElement, variant);\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      setVariants(child, variantLabels);\n    });\n  });\n}\n\nfunction setValues(visualElement, definition) {\n  if (Array.isArray(definition)) {\n    return setVariants(visualElement, definition);\n  } else if (typeof definition === \"string\") {\n    return setVariants(visualElement, [definition]);\n  } else {\n    setTarget(visualElement, definition);\n  }\n}\n\nfunction checkTargetForNewValues(visualElement, target, origin) {\n  var _a, _b, _c;\n\n  var _d;\n\n  var newValueKeys = Object.keys(target).filter(function (key) {\n    return !visualElement.hasValue(key);\n  });\n  var numNewValues = newValueKeys.length;\n  if (!numNewValues) return;\n\n  for (var i = 0; i < numNewValues; i++) {\n    var key = newValueKeys[i];\n    var targetValue = target[key];\n    var value = null;\n    /**\n     * If the target is a series of keyframes, we can use the first value\n     * in the array. If this first value is null, we'll still need to read from the DOM.\n     */\n\n    if (Array.isArray(targetValue)) {\n      value = targetValue[0];\n    }\n    /**\n     * If the target isn't keyframes, or the first keyframe was null, we need to\n     * first check if an origin value was explicitly defined in the transition as \"from\",\n     * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n     */\n\n\n    if (value === null) {\n      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n    }\n    /**\n     * If value is still undefined or null, ignore it. Preferably this would throw,\n     * but this was causing issues in Framer.\n     */\n\n\n    if (value === undefined || value === null) continue;\n\n    if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n      // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n      value = parseFloat(value);\n    } else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n      value = getAnimatableNone(key, targetValue);\n    }\n\n    visualElement.addValue(key, motionValue(value));\n    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;\n    visualElement.setBaseTarget(key, value);\n  }\n}\n\nfunction getOriginFromTransition(key, transition) {\n  if (!transition) return;\n  var valueTransition = transition[key] || transition[\"default\"] || transition;\n  return valueTransition.from;\n}\n\nfunction getOrigin(target, transition, visualElement) {\n  var _a, _b;\n\n  var origin = {};\n\n  for (var key in target) {\n    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n  }\n\n  return origin;\n}\n/**\n * @internal\n */\n\n\nfunction animateVisualElement(visualElement, definition, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  visualElement.notifyAnimationStart(definition);\n  var animation;\n\n  if (Array.isArray(definition)) {\n    var animations = definition.map(function (variant) {\n      return animateVariant(visualElement, variant, options);\n    });\n    animation = Promise.all(animations);\n  } else if (typeof definition === \"string\") {\n    animation = animateVariant(visualElement, definition, options);\n  } else {\n    var resolvedDefinition = typeof definition === \"function\" ? resolveVariant(visualElement, definition, options.custom) : definition;\n    animation = animateTarget(visualElement, resolvedDefinition, options);\n  }\n\n  return animation.then(function () {\n    return visualElement.notifyAnimationComplete(definition);\n  });\n}\n\nfunction animateVariant(visualElement, variant, options) {\n  var _a;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var resolved = resolveVariant(visualElement, variant, options.custom);\n  var _b = (resolved || {}).transition,\n      transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n\n  if (options.transitionOverride) {\n    transition = options.transitionOverride;\n  }\n  /**\n   * If we have a variant, create a callback that runs it as an animation.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n\n  var getAnimation = resolved ? function () {\n    return animateTarget(visualElement, resolved, options);\n  } : function () {\n    return Promise.resolve();\n  };\n  /**\n   * If we have children, create a callback that runs all their animations.\n   * Otherwise, we resolve a Promise immediately for a composable no-op.\n   */\n\n  var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function (forwardDelay) {\n    if (forwardDelay === void 0) {\n      forwardDelay = 0;\n    }\n\n    var _a = transition.delayChildren,\n        delayChildren = _a === void 0 ? 0 : _a,\n        staggerChildren = transition.staggerChildren,\n        staggerDirection = transition.staggerDirection;\n    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n  } : function () {\n    return Promise.resolve();\n  };\n  /**\n   * If the transition explicitly defines a \"when\" option, we need to resolve either\n   * this animation or all children animations before playing the other.\n   */\n\n  var when = transition.when;\n\n  if (when) {\n    var _c = tslib.__read(when === \"beforeChildren\" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation], 2),\n        first = _c[0],\n        last = _c[1];\n\n    return first().then(last);\n  } else {\n    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n  }\n}\n/**\n * @internal\n */\n\n\nfunction animateTarget(visualElement, definition, _a) {\n  var _b;\n\n  var _c = _a === void 0 ? {} : _a,\n      _d = _c.delay,\n      delay = _d === void 0 ? 0 : _d,\n      transitionOverride = _c.transitionOverride,\n      type = _c.type;\n\n  var _e = visualElement.makeTargetAnimatable(definition),\n      _f = _e.transition,\n      transition = _f === void 0 ? visualElement.getDefaultTransition() : _f,\n      transitionEnd = _e.transitionEnd,\n      target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n\n  if (transitionOverride) transition = transitionOverride;\n  var animations = [];\n  var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n\n  for (var key in target) {\n    var value = visualElement.getValue(key);\n    var valueTarget = target[key];\n\n    if (!value || valueTarget === undefined || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {\n      continue;\n    }\n\n    var animation = startAnimation(key, value, valueTarget, tslib.__assign({\n      delay: delay\n    }, transition));\n    animations.push(animation);\n  }\n\n  return Promise.all(animations).then(function () {\n    transitionEnd && setTarget(visualElement, transitionEnd);\n  });\n}\n\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n  if (delayChildren === void 0) {\n    delayChildren = 0;\n  }\n\n  if (staggerChildren === void 0) {\n    staggerChildren = 0;\n  }\n\n  if (staggerDirection === void 0) {\n    staggerDirection = 1;\n  }\n\n  var animations = [];\n  var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n  var generateStaggerDuration = staggerDirection === 1 ? function (i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    return i * staggerChildren;\n  } : function (i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    return maxStaggerDuration - i * staggerChildren;\n  };\n  Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach(function (child, i) {\n    animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), {\n      delay: delayChildren + generateStaggerDuration(i)\n    })).then(function () {\n      return child.notifyAnimationComplete(variant);\n    }));\n  });\n  return Promise.all(animations);\n}\n\nfunction stopAnimation(visualElement) {\n  visualElement.forEachValue(function (value) {\n    return value.stop();\n  });\n}\n\nfunction sortByTreeOrder(a, b) {\n  return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\n\n\nfunction shouldBlockAnimation(_a, key) {\n  var protectedKeys = _a.protectedKeys,\n      needsAnimating = _a.needsAnimating;\n  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n  needsAnimating[key] = false;\n  return shouldBlock;\n}\n\nvar variantPriorityOrder = [exports.AnimationType.Animate, exports.AnimationType.InView, exports.AnimationType.Focus, exports.AnimationType.Hover, exports.AnimationType.Tap, exports.AnimationType.Drag, exports.AnimationType.Exit];\n\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder), false).reverse();\n\nvar numAnimationTypes = variantPriorityOrder.length;\n\nfunction animateList(visualElement) {\n  return function (animations) {\n    return Promise.all(animations.map(function (_a) {\n      var animation = _a.animation,\n          options = _a.options;\n      return animateVisualElement(visualElement, animation, options);\n    }));\n  };\n}\n\nfunction createAnimationState(visualElement) {\n  var animate = animateList(visualElement);\n  var state = createState();\n  var allAnimatedKeys = {};\n  var isInitialRender = true;\n  /**\n   * This function will be used to reduce the animation definitions for\n   * each active animation type into an object of resolved values for it.\n   */\n\n  var buildResolvedTypeValues = function (acc, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n\n    if (resolved) {\n      resolved.transition;\n\n      var transitionEnd = resolved.transitionEnd,\n          target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n\n      acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n    }\n\n    return acc;\n  };\n\n  function isAnimated(key) {\n    return allAnimatedKeys[key] !== undefined;\n  }\n  /**\n   * This just allows us to inject mocked animation functions\n   * @internal\n   */\n\n\n  function setAnimateFunction(makeAnimator) {\n    animate = makeAnimator(visualElement);\n  }\n  /**\n   * When we receive new props, we need to:\n   * 1. Create a list of protected keys for each type. This is a directory of\n   *    value keys that are currently being \"handled\" by types of a higher priority\n   *    so that whenever an animation is played of a given type, these values are\n   *    protected from being animated.\n   * 2. Determine if an animation type needs animating.\n   * 3. Determine if any values have been removed from a type and figure out\n   *    what to animate those to.\n   */\n\n\n  function animateChanges(options, changedActiveType) {\n    var _a;\n\n    var props = visualElement.getProps();\n    var context = visualElement.getVariantContext(true) || {};\n    /**\n     * A list of animations that we'll build into as we iterate through the animation\n     * types. This will get executed at the end of the function.\n     */\n\n    var animations = [];\n    /**\n     * Keep track of which values have been removed. Then, as we hit lower priority\n     * animation types, we can check if they contain removed values and animate to that.\n     */\n\n    var removedKeys = new Set();\n    /**\n     * A dictionary of all encountered keys. This is an object to let us build into and\n     * copy it without iteration. Each time we hit an animation type we set its protected\n     * keys - the keys its not allowed to animate - to the latest version of this object.\n     */\n\n    var encounteredKeys = {};\n    /**\n     * If a variant has been removed at a given index, and this component is controlling\n     * variant animations, we want to ensure lower-priority variants are forced to animate.\n     */\n\n    var removedVariantIndex = Infinity;\n\n    var _loop_1 = function (i) {\n      var type = reversePriorityOrder[i];\n      var typeState = state[type];\n      var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n      var propIsVariant = isVariantLabel(prop);\n      /**\n       * If this type has *just* changed isActive status, set activeDelta\n       * to that status. Otherwise set to null.\n       */\n\n      var activeDelta = type === changedActiveType ? typeState.isActive : null;\n      if (activeDelta === false) removedVariantIndex = i;\n      /**\n       * If this prop is an inherited variant, rather than been set directly on the\n       * component itself, we want to make sure we allow the parent to trigger animations.\n       *\n       * TODO: Can probably change this to a !isControllingVariants check\n       */\n\n      var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n      /**\n       *\n       */\n\n      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) {\n        isInherited = false;\n      }\n      /**\n       * Set all encountered keys so far as the protected keys for this type. This will\n       * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n       */\n\n\n      typeState.protectedKeys = tslib.__assign({}, encounteredKeys); // Check if we can skip analysing this prop early\n\n      if ( // If it isn't active and hasn't *just* been set as inactive\n      !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type\n      !prop && !typeState.prevProp || // Or if the prop doesn't define an animation\n      isAnimationControls(prop) || typeof prop === \"boolean\") {\n        return \"continue\";\n      }\n      /**\n       * As we go look through the values defined on this type, if we detect\n       * a changed value or a value that was removed in a higher priority, we set\n       * this to true and add this prop to the animation list.\n       */\n\n\n      var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n      var shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active\n      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)\n      i > removedVariantIndex && propIsVariant;\n      /**\n       * As animations can be set as variant lists, variants or target objects, we\n       * coerce everything to an array if it isn't one already\n       */\n\n      var definitionList = Array.isArray(prop) ? prop : [prop];\n      /**\n       * Build an object of all the resolved values. We'll use this in the subsequent\n       * animateChanges calls to determine whether a value has changed.\n       */\n\n      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n      if (activeDelta === false) resolvedValues = {};\n      /**\n       * Now we need to loop through all the keys in the prev prop and this prop,\n       * and decide:\n       * 1. If the value has changed, and needs animating\n       * 2. If it has been removed, and needs adding to the removedKeys set\n       * 3. If it has been removed in a higher priority type and needs animating\n       * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n       *    needs adding to the type's protectedKeys list.\n       */\n\n      var _b = typeState.prevResolvedValues,\n          prevResolvedValues = _b === void 0 ? {} : _b;\n\n      var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n\n      var markToAnimate = function (key) {\n        shouldAnimateType = true;\n        removedKeys.delete(key);\n        typeState.needsAnimating[key] = true;\n      };\n\n      for (var key in allKeys) {\n        var next = resolvedValues[key];\n        var prev = prevResolvedValues[key]; // If we've already handled this we can just skip ahead\n\n        if (encounteredKeys.hasOwnProperty(key)) continue;\n        /**\n         * If the value has changed, we probably want to animate it.\n         */\n\n        if (next !== prev) {\n          /**\n           * If both values are keyframes, we need to shallow compare them to\n           * detect whether any value has changed. If it has, we animate it.\n           */\n          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n            if (!shallowCompare(next, prev) || variantDidChange) {\n              markToAnimate(key);\n            } else {\n              /**\n               * If it hasn't changed, we want to ensure it doesn't animate by\n               * adding it to the list of protected keys.\n               */\n              typeState.protectedKeys[key] = true;\n            }\n          } else if (next !== undefined) {\n            // If next is defined and doesn't equal prev, it needs animating\n            markToAnimate(key);\n          } else {\n            // If it's undefined, it's been removed.\n            removedKeys.add(key);\n          }\n        } else if (next !== undefined && removedKeys.has(key)) {\n          /**\n           * If next hasn't changed and it isn't undefined, we want to check if it's\n           * been removed by a higher priority\n           */\n          markToAnimate(key);\n        } else {\n          /**\n           * If it hasn't changed, we add it to the list of protected values\n           * to ensure it doesn't get animated.\n           */\n          typeState.protectedKeys[key] = true;\n        }\n      }\n      /**\n       * Update the typeState so next time animateChanges is called we can compare the\n       * latest prop and resolvedValues to these.\n       */\n\n\n      typeState.prevProp = prop;\n      typeState.prevResolvedValues = resolvedValues;\n      /**\n       *\n       */\n\n      if (typeState.isActive) {\n        encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n      }\n\n      if (isInitialRender && visualElement.blockInitialAnimation) {\n        shouldAnimateType = false;\n      }\n      /**\n       * If this is an inherited prop we want to hard-block animations\n       * TODO: Test as this should probably still handle animations triggered\n       * by removed values?\n       */\n\n\n      if (shouldAnimateType && !isInherited) {\n        animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) {\n          return {\n            animation: animation,\n            options: tslib.__assign({\n              type: type\n            }, options)\n          };\n        })), false));\n      }\n    };\n    /**\n     * Iterate through all animation types in reverse priority order. For each, we want to\n     * detect which values it's handling and whether or not they've changed (and therefore\n     * need to be animated). If any values have been removed, we want to detect those in\n     * lower priority props and flag for animation.\n     */\n\n\n    for (var i = 0; i < numAnimationTypes; i++) {\n      _loop_1(i);\n    }\n\n    allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n    /**\n     * If there are some removed value that haven't been dealt with,\n     * we need to create a new animation that falls back either to the value\n     * defined in the style prop, or the last read value.\n     */\n\n    if (removedKeys.size) {\n      var fallbackAnimation_1 = {};\n      removedKeys.forEach(function (key) {\n        var fallbackTarget = visualElement.getBaseTarget(key);\n\n        if (fallbackTarget !== undefined) {\n          fallbackAnimation_1[key] = fallbackTarget;\n        }\n      });\n      animations.push({\n        animation: fallbackAnimation_1\n      });\n    }\n\n    var shouldAnimate = Boolean(animations.length);\n\n    if (isInitialRender && props.initial === false && !visualElement.manuallyAnimateOnMount) {\n      shouldAnimate = false;\n    }\n\n    isInitialRender = false;\n    return shouldAnimate ? animate(animations) : Promise.resolve();\n  }\n  /**\n   * Change whether a certain animation type is active.\n   */\n\n\n  function setActive(type, isActive, options) {\n    var _a; // If the active state hasn't changed, we can safely do nothing here\n\n\n    if (state[type].isActive === isActive) return Promise.resolve(); // Propagate active change to children\n\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      var _a;\n\n      return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive);\n    });\n    state[type].isActive = isActive;\n    return animateChanges(options, type);\n  }\n\n  return {\n    isAnimated: isAnimated,\n    animateChanges: animateChanges,\n    setActive: setActive,\n    setAnimateFunction: setAnimateFunction,\n    getState: function () {\n      return state;\n    }\n  };\n}\n\nfunction checkVariantsDidChange(prev, next) {\n  if (typeof next === \"string\") {\n    return next !== prev;\n  } else if (isVariantLabels(next)) {\n    return !shallowCompare(next, prev);\n  }\n\n  return false;\n}\n\nfunction createTypeState(isActive) {\n  if (isActive === void 0) {\n    isActive = false;\n  }\n\n  return {\n    isActive: isActive,\n    protectedKeys: {},\n    needsAnimating: {},\n    prevResolvedValues: {}\n  };\n}\n\nfunction createState() {\n  var _a;\n\n  return _a = {}, _a[exports.AnimationType.Animate] = createTypeState(true), _a[exports.AnimationType.InView] = createTypeState(), _a[exports.AnimationType.Hover] = createTypeState(), _a[exports.AnimationType.Tap] = createTypeState(), _a[exports.AnimationType.Drag] = createTypeState(), _a[exports.AnimationType.Focus] = createTypeState(), _a[exports.AnimationType.Exit] = createTypeState(), _a;\n}\n\nvar animations = {\n  animation: makeRenderlessComponent(function (_a) {\n    var visualElement = _a.visualElement,\n        animate = _a.animate;\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n    if (isAnimationControls(animate)) {\n      React.useEffect(function () {\n        return animate.subscribe(visualElement);\n      }, [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(function (props) {\n    var custom = props.custom,\n        visualElement = props.visualElement;\n\n    var _a = tslib.__read(usePresence(), 2),\n        isPresent = _a[0],\n        safeToRemove = _a[1];\n\n    var presenceContext = React.useContext(PresenceContext);\n    React.useEffect(function () {\n      var _a, _b;\n\n      visualElement.isPresent = isPresent;\n      var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, {\n        custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom\n      });\n      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n    }, [isPresent]);\n  })\n};\nvar names = [\"LayoutMeasure\", \"BeforeLayoutMeasure\", \"LayoutUpdate\", \"ViewportBoxUpdate\", \"Update\", \"Render\", \"AnimationComplete\", \"LayoutAnimationComplete\", \"AnimationStart\", \"SetAxisTarget\", \"Unmount\"];\n\nfunction createLifecycles() {\n  var managers = names.map(function () {\n    return new SubscriptionManager();\n  });\n  var propSubscriptions = {};\n  var lifecycles = {\n    clearAllListeners: function () {\n      return managers.forEach(function (manager) {\n        return manager.clear();\n      });\n    },\n    updatePropListeners: function (props) {\n      names.forEach(function (name) {\n        var _a;\n\n        var on = \"on\" + name;\n        var propListener = props[on]; // Unsubscribe existing subscription\n\n        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions); // Add new subscription\n\n        if (propListener) {\n          propSubscriptions[name] = lifecycles[on](propListener);\n        }\n      });\n    }\n  };\n  managers.forEach(function (manager, i) {\n    lifecycles[\"on\" + names[i]] = function (handler) {\n      return manager.add(handler);\n    };\n\n    lifecycles[\"notify\" + names[i]] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args), false));\n    };\n  });\n  return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n  var _a;\n\n  for (var key in next) {\n    var nextValue = next[key];\n    var prevValue = prev[key];\n\n    if (isMotionValue(nextValue)) {\n      /**\n       * If this is a motion value found in props or style, we want to add it\n       * to our visual element's motion value map.\n       */\n      element.addValue(key, nextValue);\n    } else if (isMotionValue(prevValue)) {\n      /**\n       * If we're swapping to a new motion value, create a new motion value\n       * from that\n       */\n      element.addValue(key, motionValue(nextValue));\n    } else if (prevValue !== nextValue) {\n      /**\n       * If this is a flat value that has changed, update the motion value\n       * or create one if it doesn't exist. We only want to do this if we're\n       * not handling the value with our animation state.\n       */\n      if (element.hasValue(key)) {\n        var existingValue = element.getValue(key); // TODO: Only update values that aren't being animated or even looked at\n\n        !existingValue.hasAnimated && existingValue.set(nextValue);\n      } else {\n        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n      }\n    }\n  } // Handle removed values\n\n\n  for (var key in prev) {\n    if (next[key] === undefined) element.removeValue(key);\n  }\n\n  return next;\n}\n\nvar visualElement = function (_a) {\n  var _b = _a.treeType,\n      treeType = _b === void 0 ? \"\" : _b,\n      build = _a.build,\n      getBaseTarget = _a.getBaseTarget,\n      makeTargetAnimatable = _a.makeTargetAnimatable,\n      measureViewportBox = _a.measureViewportBox,\n      renderInstance = _a.render,\n      readValueFromInstance = _a.readValueFromInstance,\n      removeValueFromRenderState = _a.removeValueFromRenderState,\n      sortNodePosition = _a.sortNodePosition,\n      scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n  return function (_a, options) {\n    var parent = _a.parent,\n        props = _a.props,\n        presenceId = _a.presenceId,\n        blockInitialAnimation = _a.blockInitialAnimation,\n        visualState = _a.visualState;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var isMounted = false;\n    var latestValues = visualState.latestValues,\n        renderState = visualState.renderState;\n    /**\n     * The instance of the render-specific node that will be hydrated by the\n     * exposed React ref. So for example, this visual element can host a\n     * HTMLElement, plain object, or Three.js object. The functions provided\n     * in VisualElementConfig allow us to interface with this instance.\n     */\n\n    var instance;\n    /**\n     * Manages the subscriptions for a visual element's lifecycle, for instance\n     * onRender\n     */\n\n    var lifecycles = createLifecycles();\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n\n    var values = new Map();\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n\n    var valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n\n    var prevMotionValues = {};\n    /**\n     * When values are removed from all animation props we need to search\n     * for a fallback value to animate to. These values are tracked in baseTarget.\n     */\n\n    var baseTarget = tslib.__assign({}, latestValues); // Internal methods ========================\n\n    /**\n     * On mount, this will be hydrated with a callback to disconnect\n     * this visual element from its parent on unmount.\n     */\n\n\n    var removeFromVariantTree;\n    /**\n     * Render the element with the latest styles outside of the React\n     * render lifecycle\n     */\n\n    function render() {\n      if (!instance || !isMounted) return;\n      triggerBuild();\n      renderInstance(instance, renderState, props.style, element.projection);\n    }\n\n    function triggerBuild() {\n      build(element, renderState, latestValues, options, props);\n    }\n\n    function update() {\n      lifecycles.notifyUpdate(latestValues);\n    }\n    /**\n     *\n     */\n\n\n    function bindToMotionValue(key, value) {\n      var removeOnChange = value.onChange(function (latestValue) {\n        latestValues[key] = latestValue;\n        props.onUpdate && sync__default[\"default\"].update(update, false, true);\n      });\n      var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n      valueSubscriptions.set(key, function () {\n        removeOnChange();\n        removeOnRenderRequest();\n      });\n    }\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't neccessarily a breaking change,\n     * more a reflection of the test.\n     */\n\n\n    var initialMotionValues = scrapeMotionValuesFromProps(props);\n\n    for (var key in initialMotionValues) {\n      var value = initialMotionValues[key];\n\n      if (latestValues[key] !== undefined && isMotionValue(value)) {\n        value.set(latestValues[key], false);\n      }\n    }\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n\n\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n\n    var element = tslib.__assign(tslib.__assign({\n      treeType: treeType,\n\n      /**\n       * This is a mirror of the internal instance prop, which keeps\n       * VisualElement type-compatible with React's RefObject.\n       */\n      current: null,\n\n      /**\n       * The depth of this visual element within the visual element tree.\n       */\n      depth: parent ? parent.depth + 1 : 0,\n      parent: parent,\n      children: new Set(),\n\n      /**\n       *\n       */\n      presenceId: presenceId,\n\n      /**\n       * If this component is part of the variant tree, it should track\n       * any children that are also part of the tree. This is essentially\n       * a shadow tree to simplify logic around how to stagger over children.\n       */\n      variantChildren: isVariantNode ? new Set() : undefined,\n\n      /**\n       * Whether this instance is visible. This can be changed imperatively\n       * by the projection tree, is analogous to CSS's visibility in that\n       * hidden elements should take up layout, and needs enacting by the configured\n       * render function.\n       */\n      isVisible: undefined,\n\n      /**\n       * Normally, if a component is controlled by a parent's variants, it can\n       * rely on that ancestor to trigger animations further down the tree.\n       * However, if a component is created after its parent is mounted, the parent\n       * won't trigger that mount animation so the child needs to.\n       *\n       * TODO: This might be better replaced with a method isParentMounted\n       */\n      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),\n\n      /**\n       * This can be set by AnimatePresence to force components that mount\n       * at the same time as it to mount as if they have initial={false} set.\n       */\n      blockInitialAnimation: blockInitialAnimation,\n\n      /**\n       * Determine whether this component has mounted yet. This is mostly used\n       * by variant children to determine whether they need to trigger their\n       * own animations on mount.\n       */\n      isMounted: function () {\n        return Boolean(instance);\n      },\n      mount: function (newInstance) {\n        isMounted = true;\n        instance = element.current = newInstance;\n\n        if (element.projection) {\n          element.projection.mount(newInstance);\n        }\n\n        if (isVariantNode && parent && !isControllingVariants) {\n          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n        }\n\n        parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n        element.setProps(props);\n      },\n\n      /**\n       *\n       */\n      unmount: function () {\n        var _a;\n\n        (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        sync.cancelSync.update(update);\n        sync.cancelSync.render(render);\n        valueSubscriptions.forEach(function (remove) {\n          return remove();\n        });\n        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n        lifecycles.clearAllListeners();\n        instance = undefined;\n        isMounted = false;\n      },\n\n      /**\n       * Add a child visual element to our set of children.\n       */\n      addVariantChild: function (child) {\n        var _a;\n\n        var closestVariantNode = element.getClosestVariantNode();\n\n        if (closestVariantNode) {\n          (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n          return function () {\n            return closestVariantNode.variantChildren.delete(child);\n          };\n        }\n      },\n      sortNodePosition: function (other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!sortNodePosition || treeType !== other.treeType) return 0;\n        return sortNodePosition(element.getInstance(), other.getInstance());\n      },\n\n      /**\n       * Returns the closest variant node in the tree starting from\n       * this visual element.\n       */\n      getClosestVariantNode: function () {\n        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n      },\n\n      /**\n       * Expose the latest layoutId prop.\n       */\n      getLayoutId: function () {\n        return props.layoutId;\n      },\n\n      /**\n       * Returns the current instance.\n       */\n      getInstance: function () {\n        return instance;\n      },\n\n      /**\n       * Get/set the latest static values.\n       */\n      getStaticValue: function (key) {\n        return latestValues[key];\n      },\n      setStaticValue: function (key, value) {\n        return latestValues[key] = value;\n      },\n\n      /**\n       * Returns the latest motion value state. Currently only used to take\n       * a snapshot of the visual element - perhaps this can return the whole\n       * visual state\n       */\n      getLatestValues: function () {\n        return latestValues;\n      },\n\n      /**\n       * Set the visiblity of the visual element. If it's changed, schedule\n       * a render to reflect these changes.\n       */\n      setVisibility: function (visibility) {\n        if (element.isVisible === visibility) return;\n        element.isVisible = visibility;\n        element.scheduleRender();\n      },\n\n      /**\n       * Make a target animatable by Popmotion. For instance, if we're\n       * trying to animate width from 100px to 100vw we need to measure 100vw\n       * in pixels to determine what we really need to animate to. This is also\n       * pluggable to support Framer's custom value types like Color,\n       * and CSS variables.\n       */\n      makeTargetAnimatable: function (target, canMutate) {\n        if (canMutate === void 0) {\n          canMutate = true;\n        }\n\n        return makeTargetAnimatable(element, target, props, canMutate);\n      },\n\n      /**\n       * Measure the current viewport box with or without transforms.\n       * Only measures axis-aligned boxes, rotate and skew must be manually\n       * removed with a re-render to work.\n       */\n      measureViewportBox: function () {\n        return measureViewportBox(instance, props);\n      },\n      // Motion values ========================\n\n      /**\n       * Add a motion value and bind it to this visual element.\n       */\n      addValue: function (key, value) {\n        // Remove existing value if it exists\n        if (element.hasValue(key)) element.removeValue(key);\n        values.set(key, value);\n        latestValues[key] = value.get();\n        bindToMotionValue(key, value);\n      },\n\n      /**\n       * Remove a motion value and unbind any active subscriptions.\n       */\n      removeValue: function (key) {\n        var _a;\n\n        values.delete(key);\n        (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        valueSubscriptions.delete(key);\n        delete latestValues[key];\n        removeValueFromRenderState(key, renderState);\n      },\n\n      /**\n       * Check whether we have a motion value for this key\n       */\n      hasValue: function (key) {\n        return values.has(key);\n      },\n\n      /**\n       * Get a motion value for this key. If called with a default\n       * value, we'll create one if none exists.\n       */\n      getValue: function (key, defaultValue) {\n        var value = values.get(key);\n\n        if (value === undefined && defaultValue !== undefined) {\n          value = motionValue(defaultValue);\n          element.addValue(key, value);\n        }\n\n        return value;\n      },\n\n      /**\n       * Iterate over our motion values.\n       */\n      forEachValue: function (callback) {\n        return values.forEach(callback);\n      },\n\n      /**\n       * If we're trying to animate to a previously unencountered value,\n       * we need to check for it in our state and as a last resort read it\n       * directly from the instance (which might have performance implications).\n       */\n      readValue: function (key) {\n        var _a;\n\n        return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n      },\n\n      /**\n       * Set the base target to later animate back to. This is currently\n       * only hydrated on creation and when we first read a value.\n       */\n      setBaseTarget: function (key, value) {\n        baseTarget[key] = value;\n      },\n\n      /**\n       * Find the base target for a value thats been removed from all animation\n       * props.\n       */\n      getBaseTarget: function (key) {\n        if (getBaseTarget) {\n          var target = getBaseTarget(props, key);\n          if (target !== undefined && !isMotionValue(target)) return target;\n        }\n\n        return baseTarget[key];\n      }\n    }, lifecycles), {\n      /**\n       * Build the renderer state based on the latest visual state.\n       */\n      build: function () {\n        triggerBuild();\n        return renderState;\n      },\n\n      /**\n       * Schedule a render on the next animation frame.\n       */\n      scheduleRender: function () {\n        sync__default[\"default\"].render(render, false, true);\n      },\n\n      /**\n       * Synchronously fire render. It's prefered that we batch renders but\n       * in many circumstances, like layout measurement, we need to run this\n       * synchronously. However in those instances other measures should be taken\n       * to batch reads/writes.\n       */\n      syncRender: render,\n\n      /**\n       * Update the provided props. Ensure any newly-added motion values are\n       * added to our map, old ones removed, and listeners updated.\n       */\n      setProps: function (newProps) {\n        if (newProps.transformTemplate || props.transformTemplate) {\n          element.scheduleRender();\n        }\n\n        props = newProps;\n        lifecycles.updatePropListeners(newProps);\n        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n      },\n      getProps: function () {\n        return props;\n      },\n      // Variants ==============================\n\n      /**\n       * Returns the variant definition with a given name.\n       */\n      getVariant: function (name) {\n        var _a;\n\n        return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name];\n      },\n\n      /**\n       * Returns the defined default transition on this component.\n       */\n      getDefaultTransition: function () {\n        return props.transition;\n      },\n      getTransformPagePoint: function () {\n        return props.transformPagePoint;\n      },\n\n      /**\n       * Used by child variant nodes to get the closest ancestor variant props.\n       */\n      getVariantContext: function (startAtParent) {\n        if (startAtParent === void 0) {\n          startAtParent = false;\n        }\n\n        if (startAtParent) return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n\n        if (!isControllingVariants) {\n          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n\n          if (props.initial !== undefined) {\n            context_1.initial = props.initial;\n          }\n\n          return context_1;\n        }\n\n        var context = {};\n\n        for (var i = 0; i < numVariantProps; i++) {\n          var name_1 = variantProps[i];\n          var prop = props[name_1];\n\n          if (isVariantLabel(prop) || prop === false) {\n            context[name_1] = prop;\n          }\n        }\n\n        return context;\n      }\n    });\n\n    return element;\n  };\n};\n\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder), false);\n\nvar numVariantProps = variantProps.length;\n\nfunction useForceUpdate() {\n  var isUnmountingRef = React.useRef(false);\n\n  var _a = tslib.__read(React.useState(0), 2),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  useUnmountEffect(function () {\n    return isUnmountingRef.current = true;\n  });\n  var forceRender = React.useCallback(function () {\n    !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n  /**\n   * Defer this to the end of the next animation frame in case there are multiple\n   * synchronous calls.\n   */\n\n  var deferredForceRender = React.useCallback(function () {\n    return sync__default[\"default\"].postRender(forceRender);\n  }, [forceRender]);\n  return [deferredForceRender, forcedRenderCount];\n}\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = React.useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = tslib.__read(React.useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    React.useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nexports.FlatTree = FlatTree;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyContext = LazyContext;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.addDomEvent = addDomEvent;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animations = animations;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.createBox = createBox;\nexports.createMotionComponent = createMotionComponent;\nexports.createProjectionNode = createProjectionNode;\nexports.eachAxis = eachAxis;\nexports.extractEventInfo = extractEventInfo;\nexports.filterProps = filterProps;\nexports.findDimensionValueType = findDimensionValueType;\nexports.getDefaultValueType = getDefaultValueType;\nexports.getGlobalLock = getGlobalLock;\nexports.getOrigin = getOrigin;\nexports.globalProjectionState = globalProjectionState;\nexports.instantAnimationState = instantAnimationState;\nexports.isDragActive = isDragActive;\nexports.isKeyframesTarget = isKeyframesTarget;\nexports.isMotionValue = isMotionValue;\nexports.isMouseEvent = isMouseEvent;\nexports.isRefObject = isRefObject;\nexports.isTouchEvent = isTouchEvent;\nexports.isTransformOriginProp = isTransformOriginProp;\nexports.isTransformProp = isTransformProp;\nexports.isValidMotionProp = isValidMotionProp;\nexports.loadExternalIsValidProp = loadExternalIsValidProp;\nexports.loadFeatures = loadFeatures;\nexports.makeRenderlessComponent = makeRenderlessComponent;\nexports.makeUseVisualState = makeUseVisualState;\nexports.motionValue = motionValue;\nexports.moveItem = moveItem;\nexports.numberValueTypes = numberValueTypes;\nexports.resolveMotionValue = resolveMotionValue;\nexports.scaleCorrectors = scaleCorrectors;\nexports.secondsToMilliseconds = secondsToMilliseconds;\nexports.setValues = setValues;\nexports.sortTransformProps = sortTransformProps;\nexports.startAnimation = startAnimation;\nexports.stopAnimation = stopAnimation;\nexports.transformProps = transformProps;\nexports.translateAxis = translateAxis;\nexports.useConstant = useConstant;\nexports.useDomEvent = useDomEvent;\nexports.useForceUpdate = useForceUpdate;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionValue = useMotionValue;\nexports.usePointerEvent = usePointerEvent;\nexports.usePresence = usePresence;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVisualElementContext = useVisualElementContext;\nexports.visualElement = visualElement;\nexports.wrapHandler = wrapHandler;","map":{"version":3,"sources":["C:/Users/HP/Desktop/bootcamp/bootcamp/node_modules/framer-motion/dist/cjs/use-motion-value-4144a8cf.js"],"names":["tslib","require","React","heyListen","sync","popmotion","styleValueTypes","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","React__namespace","React__default","sync__default","createDefinition","propNames","isEnabled","props","some","name","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","loadFeatures","features","key","projectionNodeConstructor","Component","LazyContext","createContext","strict","featureNames","numFeatures","length","useFeatures","visualElement","preloadedFeatures","lazyContext","useContext","process","env","NODE_ENV","invariant","i","name_1","_a","push","createElement","__assign","MotionConfigContext","transformPagePoint","p","isStatic","MotionContext","useVisualElementContext","PresenceContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useVisualElement","visualState","createVisualElement","parent","presenceContext","visualElementRef","useRef","undefined","renderer","current","presenceId","id","blockInitialAnimation","initial","syncRender","animationState","animateChanges","notifyUnmount","isRefObject","ref","prototype","hasOwnProperty","call","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabels","v","Array","isArray","isVariantLabel","getCurrent","forEachValue","value","getVelocity","velocity","resolveVariantFromProps","definition","custom","currentValues","currentVelocity","variants","resolveVariant","getProps","checkIfControllingVariants","animate","start","whileHover","whileDrag","whileTap","whileFocus","checkIfVariantNode","Boolean","getCurrentTreeVariants","context","inherit","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","join","useConstant","init","addUniqueItem","arr","item","indexOf","removeItem","index","splice","moveItem","fromIndex","toIndex","_b","__read","slice","startIndex","endIndex","_c","SubscriptionManager","subscriptions","add","handler","_this","notify","a","b","c","numSubscriptions","getSize","clear","isFloat","isNaN","parseFloat","MotionValue","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","render","prev","getFrameData","delta","timestamp","postRender","scheduleVelocityCheck","velocityCheck","hasAnimated","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","set","getPrevious","velocityPerSecond","stop","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","isMotionValue","secondsToMilliseconds","seconds","easingLookup","linear","easeIn","easeInOut","easeOut","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","bounceIn","bounceInOut","bounceOut","easingDefinitionToFunction","x1","y1","x2","y2","cubicBezier","concat","isEasingArray","ease","isAnimatable","complex","test","startsWith","isKeyframesTarget","underDampedSpring","type","stiffness","damping","restSpeed","criticallyDampedSpring","to","Math","sqrt","linearTween","duration","keyframes","values","defaultTransitions","x","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","color","default","getDefaultTransition","valueKey","transitionFactory","int","number","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","degrees","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","transformPerspective","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","filter","WebkitFilter","getDefaultValueType","getAnimatableNone","defaultValueType","instantAnimationState","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","transition","__rest","legacyRepeatWarning","convertTransitionToAnimationOptions","times","yoyo","flip","loop","options","map","warning","getDelayFromTransition","valueTransition","getValueTransition","hydrateKeyframes","__spreadArray","getPopmotionAnimationOptions","getAnimation","target","onComplete","origin","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","onUpdate","inertia","finalTarget","potentialUnitType","startAnimation","delayTimer","controls","setTimeout","clearTimeout","borders","numBorders","asNumber","isPx","mixValues","follow","lead","progress","shouldCrossfadeOpacity","isOnlyMember","_d","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","canMix","max","percent","radiusName","compress","min","easing","copyAxisInto","axis","originAxis","copyBoxInto","box","originBox","isIdentityScale","hasScale","hasTransform","hasTranslate","scalePoint","point","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","projectionDelta","style","display","layoutScroll","scroll","root","transformBox","latestValues","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys$1","yKeys$1","calcLength","isNear","maxDistance","calcAxisDelta","source","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","layout","calcRelativePosition","removePointDelta","removeAxisDelta","sourceAxis","relativeProgress","removeAxisTransforms","xKeys","yKeys","removeBoxTransforms","sourceBox","createAxisDelta","createDelta","createAxis","createBox","isAxisDeltaZero","isDeltaZero","boxEquals","NodeStack","members","scheduleRender","remove","prevLead","promote","relegate","indexOfNode","findIndex","member","isPresent","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isShared","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","onExitComplete","resumingFrom","removeLeadSnapshot","scaleCorrectors","addScaleCorrector","correctors","assign","identityProjection","buildProjectionTransform","latestTransform","xTranslate","yTranslate","eachAxis","callback","transformAxes","order","transformProps","operationKey","axesKey","sortTransformProps","transformPropSet","Set","isTransformProp","has","transformOriginProps","isTransformOriginProp","compareByDepth","depth","FlatTree","children","isDirty","child","sort","resolveMotionValue","unwrappedValue","animationTarget","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","createProjectionNode","attachResizeListener","defaultParent","measureScroll","resetTransform","ProjectionNode","isTreeAnimating","isAnimationBlocked","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","addEventListener","notifyListeners","args","_i","arguments","subscriptionManager","apply","hasListeners","SVGElement","tagName","layoutId","getInstance","delete","unblockTimeout_1","resizeUnblockUpdate_1","finishAnimation","registerSharedNode","_f","hasLayoutChanged","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","currentAnimation","setAnimationOrigin","isLead","willUpdate","getStack","cancelSync","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","updateScroll","transformTemplate","prevTransformTemplateValue","updateSnapshot","didUpdate","updateWasBlocked","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","flushSync","update","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","scheduleCheckAfterUnmount","measured","measure","removeTransform","removeElementScroll","roundBox","alwaysMeasureLayout","prevLayout","actual","layoutCorrected","notifyLayoutMeasure","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","measureViewportBox","boxWithoutScroll","scroll_1","applyTransform","transformOnly","withTransforms","boxWithoutTransform","nodeBox","setTargetDelta","targetDelta","setOptions","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","attemptToResolveRelativeTarget","pendingAnimation","getLead","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","latest","mixAxisDelta","mixBox","completeAnimation","applyTransformsToTarget","stack","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","getStaticValue","setStaticValue","getProjectionStyles","styleProp","styles","visibility","pointerEvents","emptyStyles","valuesToRender","_g","transformOrigin","_h","correct","applyTo","corrected","num","resetTree","layout_1","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","output","mixAxis","searchNode","searchElement","document","element","querySelector","roundAxis","useProjectionId","LayoutGroupContext","SwitchLayoutGroupContext","useProjection","projectionId","ProjectionNodeConstructor","dragConstraints","projection","getLatestValues","VisualElementHandler","_super","__extends","getSnapshotBeforeUpdate","updateProps","componentDidUpdate","setProps","createMotionComponent","useRender","useVisualState","MotionComponent","useLayoutId","config","Provider","forwardRef","layoutGroupId","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","isAnimationControls","makeState","scrapeMotionValuesFromProps","createRenderState","onMount","state","makeLatestValues","renderState","makeUseVisualState","scrapeMotionValues","motionValues","isControllingVariants","isVariantNode","initialAnimationIsBlocked","variantToSet","list","resolved","transitionEnd","valueTarget","exports","AnimationType","addDomEvent","eventName","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","hasTouches","touches","filterPrimaryPointer","eventHandler","isPrimaryPointer","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal_1","openVertical_1","isDragActive","openGestureLock","useUnmountEffect","makeRenderlessComponent","hook","usePresence","register","useUniqueId","safeToRemove","useIsPresent","counter","incrementId","shallowCompare","next","prevLength","isNumericalString","isZeroValueString","testValueType","auto","parse","dimensionValueTypes","vw","vh","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","setVariants","variantLabels","reversedLabels","reverse","variant","getVariant","variantChildren","setValues","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","getOrigin","animateVisualElement","notifyAnimationStart","animations","animateVariant","all","resolvedDefinition","animateTarget","notifyAnimationComplete","transitionOverride","getChildAnimations","forwardDelay","animateChildren","first","last","animationTypeState","getState","shouldBlockAnimation","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","isAnimated","setAnimateFunction","makeAnimator","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","_loop_1","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation_1","fallbackTarget","getBaseTarget","shouldAnimate","setActive","createTypeState","subscribe","names","createLifecycles","managers","propSubscriptions","lifecycles","clearAllListeners","manager","updatePropListeners","on","propListener","updateMotionValuesFromProps","nextValue","prevValue","existingValue","removeValue","treeType","build","renderInstance","readValueFromInstance","removeValueFromRenderState","isMounted","valueSubscriptions","prevMotionValues","baseTarget","removeFromVariantTree","triggerBuild","notifyUpdate","bindToMotionValue","removeOnChange","latestValue","removeOnRenderRequest","initialMotionValues","newInstance","addVariantChild","closestVariantNode","getClosestVariantNode","other","getLayoutId","setVisibility","canMutate","defaultValue","newProps","getTransformPagePoint","startAtParent","context_1","numVariantProps","variantProps","useForceUpdate","isUnmountingRef","useState","forcedRenderCount","setForcedRenderCount","forceRender","deferredForceRender","useMotionValue","setLatest_1"],"mappings":"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","sourcesContent":["'use strict';\n\nvar tslib = require('tslib');\nvar React = require('react');\nvar heyListen = require('hey-listen');\nvar sync = require('framesync');\nvar popmotion = require('popmotion');\nvar styleValueTypes = require('style-value-types');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar createDefinition = function (propNames) { return ({\n    isEnabled: function (props) { return propNames.some(function (name) { return !!props[name]; }); },\n}); };\nvar featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\nfunction loadFeatures(features) {\n    for (var key in features) {\n        if (features[key] === null)\n            continue;\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nvar LazyContext = React.createContext({ strict: false });\n\nvar featureNames = Object.keys(featureDefinitions);\nvar numFeatures = featureNames.length;\n/**\n * Load features via renderless components based on the provided MotionProps.\n */\nfunction useFeatures(props, visualElement, preloadedFeatures) {\n    var features = [];\n    var lazyContext = React.useContext(LazyContext);\n    if (!visualElement)\n        return null;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        lazyContext.strict) {\n        heyListen.invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n    }\n    for (var i = 0; i < numFeatures; i++) {\n        var name_1 = featureNames[i];\n        var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;\n        /**\n         * It might be possible in the future to use this moment to\n         * dynamically request functionality. In initial tests this\n         * was producing a lot of duplication amongst bundles.\n         */\n        if (isEnabled(props) && Component) {\n            features.push(React__namespace.createElement(Component, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement })));\n        }\n    }\n    return features;\n}\n\n/**\n * @public\n */\nvar MotionConfigContext = React.createContext({\n    transformPagePoint: function (p) { return p; },\n    isStatic: false,\n});\n\nvar MotionContext = React.createContext({});\nfunction useVisualElementContext() {\n    return React.useContext(MotionContext).visualElement;\n}\n\n/**\n * @public\n */\nvar PresenceContext = React.createContext(null);\n\nvar isBrowser = typeof window !== \"undefined\";\n\nvar useIsomorphicLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    var lazyContext = React.useContext(LazyContext);\n    var parent = useVisualElementContext();\n    var presenceContext = React.useContext(PresenceContext);\n    var visualElementRef = React.useRef(undefined);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    if (!createVisualElement)\n        createVisualElement = lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState: visualState,\n            parent: parent,\n            props: props,\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\n        });\n    }\n    var visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(function () {\n        visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n    });\n    React.useEffect(function () {\n        var _a;\n        (_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n    });\n    useIsomorphicLayoutEffect(function () { return function () { return visualElement === null || visualElement === void 0 ? void 0 : visualElement.notifyUnmount(); }; }, []);\n    return visualElement;\n}\n\nfunction isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return React.useCallback(function (instance) {\n        var _a;\n        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\n/**\n * Decides if the supplied variable is an array of variant labels\n */\nfunction isVariantLabels(v) {\n    return Array.isArray(v);\n}\n/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || isVariantLabels(v);\n}\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    var current = {};\n    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    var velocity = {};\n    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });\n    return velocity;\n}\nfunction resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {\n    var _a;\n    if (currentValues === void 0) { currentValues = {}; }\n    if (currentVelocity === void 0) { currentVelocity = {}; }\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    var props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\nfunction checkIfControllingVariants(props) {\n    var _a;\n    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === \"function\" ||\n        isVariantLabel(props.initial) ||\n        isVariantLabel(props.animate) ||\n        isVariantLabel(props.whileHover) ||\n        isVariantLabel(props.whileDrag) ||\n        isVariantLabel(props.whileTap) ||\n        isVariantLabel(props.whileFocus) ||\n        isVariantLabel(props.exit));\n}\nfunction checkIfVariantNode(props) {\n    return Boolean(checkIfControllingVariants(props) || props.variants);\n}\n\nfunction getCurrentTreeVariants(props, context) {\n    if (checkIfControllingVariants(props)) {\n        var initial = props.initial, animate = props.animate;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nfunction useCreateMotionContext(props) {\n    var _a = getCurrentTreeVariants(props, React.useContext(MotionContext)), initial = _a.initial, animate = _a.animate;\n    return React.useMemo(function () { return ({ initial: initial, animate: animate }); }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    var ref = React.useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nfunction addUniqueItem(arr, item) {\n    arr.indexOf(item) === -1 && arr.push(item);\n}\nfunction removeItem(arr, item) {\n    var index = arr.indexOf(item);\n    index > -1 && arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem(_a, fromIndex, toIndex) {\n    var _b = tslib.__read(_a), arr = _b.slice(0);\n    var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        var _c = tslib.__read(arr.splice(fromIndex, 1), 1), item = _c[0];\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nvar SubscriptionManager = /** @class */ (function () {\n    function SubscriptionManager() {\n        this.subscriptions = [];\n    }\n    SubscriptionManager.prototype.add = function (handler) {\n        var _this = this;\n        addUniqueItem(this.subscriptions, handler);\n        return function () { return removeItem(_this.subscriptions, handler); };\n    };\n    SubscriptionManager.prototype.notify = function (a, b, c) {\n        var numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (var i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                var handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    };\n    SubscriptionManager.prototype.getSize = function () {\n        return this.subscriptions.length;\n    };\n    SubscriptionManager.prototype.clear = function () {\n        this.subscriptions.length = 0;\n    };\n    return SubscriptionManager;\n}());\n\nvar isFloat = function (value) {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nvar MotionValue = /** @class */ (function () {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    function MotionValue(init) {\n        var _this = this;\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = function (v, render) {\n            if (render === void 0) { render = true; }\n            _this.prev = _this.current;\n            _this.current = v;\n            // Update timestamp\n            var _a = sync.getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\n            if (_this.lastUpdated !== timestamp) {\n                _this.timeDelta = delta;\n                _this.lastUpdated = timestamp;\n                sync__default[\"default\"].postRender(_this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (_this.prev !== _this.current) {\n                _this.updateSubscribers.notify(_this.current);\n            }\n            // Update velocity subscribers\n            if (_this.velocityUpdateSubscribers.getSize()) {\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                _this.renderSubscribers.notify(_this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = function () { return sync__default[\"default\"].postRender(_this.velocityCheck); };\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = function (_a) {\n            var timestamp = _a.timestamp;\n            if (timestamp !== _this.lastUpdated) {\n                _this.prev = _this.current;\n                _this.velocityUpdateSubscribers.notify(_this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @internalremarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    MotionValue.prototype.onChange = function (subscription) {\n        return this.updateSubscribers.add(subscription);\n    };\n    MotionValue.prototype.clearListeners = function () {\n        this.updateSubscribers.clear();\n    };\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    MotionValue.prototype.onRenderRequest = function (subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    };\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    MotionValue.prototype.attach = function (passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    };\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    MotionValue.prototype.set = function (v, render) {\n        if (render === void 0) { render = true; }\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    };\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    MotionValue.prototype.get = function () {\n        return this.current;\n    };\n    /**\n     * @public\n     */\n    MotionValue.prototype.getPrevious = function () {\n        return this.prev;\n    };\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    MotionValue.prototype.getVelocity = function () {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                popmotion.velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    };\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    MotionValue.prototype.start = function (animation) {\n        var _this = this;\n        this.stop();\n        return new Promise(function (resolve) {\n            _this.hasAnimated = true;\n            _this.stopAnimation = animation(resolve);\n        }).then(function () { return _this.clearAnimation(); });\n    };\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    MotionValue.prototype.stop = function () {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    };\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    MotionValue.prototype.isAnimating = function () {\n        return !!this.stopAnimation;\n    };\n    MotionValue.prototype.clearAnimation = function () {\n        this.stopAnimation = null;\n    };\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    MotionValue.prototype.destroy = function () {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    };\n    return MotionValue;\n}());\n/**\n * @internal\n */\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nvar isMotionValue = function (value) {\n    return Boolean(value !== null && typeof value === \"object\" && value.getVelocity);\n};\n\n/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar easingLookup = {\n    linear: popmotion.linear,\n    easeIn: popmotion.easeIn,\n    easeInOut: popmotion.easeInOut,\n    easeOut: popmotion.easeOut,\n    circIn: popmotion.circIn,\n    circInOut: popmotion.circInOut,\n    circOut: popmotion.circOut,\n    backIn: popmotion.backIn,\n    backInOut: popmotion.backInOut,\n    backOut: popmotion.backOut,\n    anticipate: popmotion.anticipate,\n    bounceIn: popmotion.bounceIn,\n    bounceInOut: popmotion.bounceInOut,\n    bounceOut: popmotion.bounceOut,\n};\nvar easingDefinitionToFunction = function (definition) {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        heyListen.invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n        var _a = tslib.__read(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];\n        return popmotion.cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        heyListen.invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\".concat(definition, \"'\"));\n        return easingLookup[definition];\n    }\n    return definition;\n};\nvar isEasingArray = function (ease) {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nvar isAnimatable = function (key, value) {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        styleValueTypes.complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nvar isKeyframesTarget = function (v) {\n    return Array.isArray(v);\n};\n\nvar underDampedSpring = function () { return ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n}); };\nvar criticallyDampedSpring = function (to) { return ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n}); };\nvar linearTween = function () { return ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n}); };\nvar keyframes = function (values) { return ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values,\n}); };\nvar defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nvar getDefaultTransition = function (valueKey, to) {\n    var transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return tslib.__assign({ to: to }, transitionFactory(to));\n};\n\nvar int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round });\n\nvar numberValueTypes = {\n    // Border props\n    borderWidth: styleValueTypes.px,\n    borderTopWidth: styleValueTypes.px,\n    borderRightWidth: styleValueTypes.px,\n    borderBottomWidth: styleValueTypes.px,\n    borderLeftWidth: styleValueTypes.px,\n    borderRadius: styleValueTypes.px,\n    radius: styleValueTypes.px,\n    borderTopLeftRadius: styleValueTypes.px,\n    borderTopRightRadius: styleValueTypes.px,\n    borderBottomRightRadius: styleValueTypes.px,\n    borderBottomLeftRadius: styleValueTypes.px,\n    // Positioning props\n    width: styleValueTypes.px,\n    maxWidth: styleValueTypes.px,\n    height: styleValueTypes.px,\n    maxHeight: styleValueTypes.px,\n    size: styleValueTypes.px,\n    top: styleValueTypes.px,\n    right: styleValueTypes.px,\n    bottom: styleValueTypes.px,\n    left: styleValueTypes.px,\n    // Spacing props\n    padding: styleValueTypes.px,\n    paddingTop: styleValueTypes.px,\n    paddingRight: styleValueTypes.px,\n    paddingBottom: styleValueTypes.px,\n    paddingLeft: styleValueTypes.px,\n    margin: styleValueTypes.px,\n    marginTop: styleValueTypes.px,\n    marginRight: styleValueTypes.px,\n    marginBottom: styleValueTypes.px,\n    marginLeft: styleValueTypes.px,\n    // Transform props\n    rotate: styleValueTypes.degrees,\n    rotateX: styleValueTypes.degrees,\n    rotateY: styleValueTypes.degrees,\n    rotateZ: styleValueTypes.degrees,\n    scale: styleValueTypes.scale,\n    scaleX: styleValueTypes.scale,\n    scaleY: styleValueTypes.scale,\n    scaleZ: styleValueTypes.scale,\n    skew: styleValueTypes.degrees,\n    skewX: styleValueTypes.degrees,\n    skewY: styleValueTypes.degrees,\n    distance: styleValueTypes.px,\n    translateX: styleValueTypes.px,\n    translateY: styleValueTypes.px,\n    translateZ: styleValueTypes.px,\n    x: styleValueTypes.px,\n    y: styleValueTypes.px,\n    z: styleValueTypes.px,\n    perspective: styleValueTypes.px,\n    transformPerspective: styleValueTypes.px,\n    opacity: styleValueTypes.alpha,\n    originX: styleValueTypes.progressPercentage,\n    originY: styleValueTypes.progressPercentage,\n    originZ: styleValueTypes.px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: styleValueTypes.alpha,\n    strokeOpacity: styleValueTypes.alpha,\n    numOctaves: int,\n};\n\n/**\n * A map of default value types for common values\n */\nvar defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), { \n    // Color props\n    color: styleValueTypes.color, backgroundColor: styleValueTypes.color, outlineColor: styleValueTypes.color, fill: styleValueTypes.color, stroke: styleValueTypes.color, \n    // Border props\n    borderColor: styleValueTypes.color, borderTopColor: styleValueTypes.color, borderRightColor: styleValueTypes.color, borderBottomColor: styleValueTypes.color, borderLeftColor: styleValueTypes.color, filter: styleValueTypes.filter, WebkitFilter: styleValueTypes.filter });\n/**\n * Gets the default ValueType for the provided value key\n */\nvar getDefaultValueType = function (key) { return defaultValueTypes[key]; };\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    var defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== styleValueTypes.filter)\n        defaultValueType = styleValueTypes.complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nvar instantAnimationState = {\n    current: false,\n};\n\nvar isCustomValue = function (v) {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nvar resolveFinalValueInKeyframes = function (v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined(_a) {\n    _a.when; _a.delay; _a.delayChildren; _a.staggerChildren; _a.staggerDirection; _a.repeat; _a.repeatType; _a.repeatDelay; _a.from; var transition = tslib.__rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\", \"repeat\", \"repeatType\", \"repeatDelay\", \"from\"]);\n    return !!Object.keys(transition).length;\n}\nvar legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions(_a) {\n    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = tslib.__rest(_a, [\"ease\", \"times\", \"yoyo\", \"flip\", \"loop\"]);\n    var options = tslib.__assign({}, transition);\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        heyListen.warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    var valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = tslib.__spreadArray([], tslib.__read(options.to), false);\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    var _a;\n    if (Array.isArray(options.to)) {\n        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to));\n    }\n    return tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    var _a;\n    var valueTransition = getValueTransition(transition, key);\n    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();\n    var isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    var isOriginAnimatable = isAnimatable(key, origin);\n    heyListen.warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \".concat(key, \" from \\\"\").concat(origin, \"\\\" to \\\"\").concat(target, \"\\\". \").concat(origin, \" is not an animatable value - to enable this animation set \").concat(origin, \" to a value animatable to \").concat(target, \" via the `style` property.\"));\n    function start() {\n        var options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete: onComplete,\n            onUpdate: function (v) { return value.set(v); },\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition))\n            : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {\n                    var _a;\n                    options.onUpdate(v);\n                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);\n                }, onComplete: function () {\n                    var _a;\n                    options.onComplete();\n                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);\n                } }));\n    }\n    function set() {\n        var _a, _b;\n        var finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, finalTarget);\n        (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);\n        return { stop: function () { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n *\n * @internal\n */\nfunction startAnimation(key, value, target, transition) {\n    if (transition === void 0) { transition = {}; }\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start(function (onComplete) {\n        var delayTimer;\n        var controls;\n        var animation = getAnimation(key, value, target, transition, onComplete);\n        var delay = getDelayFromTransition(transition, key);\n        var start = function () { return (controls = animation()); };\n        if (delay) {\n            delayTimer = setTimeout(start, secondsToMilliseconds(delay));\n        }\n        else {\n            start();\n        }\n        return function () {\n            clearTimeout(delayTimer);\n            controls === null || controls === void 0 ? void 0 : controls.stop();\n        };\n    });\n}\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition) {\n    if (transition === void 0) { transition = {}; }\n    var value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: function () { return value.stop(); },\n        isAnimating: function () { return value.isAnimating(); },\n    };\n}\n\nvar borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nvar numBorders = borders.length;\nvar asNumber = function (value) {\n    return typeof value === \"string\" ? parseFloat(value) : value;\n};\nvar isPx = function (value) {\n    return typeof value === \"number\" || styleValueTypes.px.test(value);\n};\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = popmotion.mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (var i = 0; i < numBorders; i++) {\n        var borderLabel = \"border\".concat(borders[i], \"Radius\");\n        var followRadius = getRadius(follow, borderLabel);\n        var leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        var canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nvar easeCrossfadeIn = compress(0, 0.5, popmotion.circOut);\nvar easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);\nfunction compress(min, max, easing) {\n    return function (p) {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(popmotion.progress(min, max, p));\n    };\n}\n\n/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nfunction isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale(_a) {\n    var scale = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        hasTranslate(values.x) ||\n        hasTranslate(values.y) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction hasTranslate(value) {\n    return value && value !== \"0%\";\n}\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    var distanceFromOrigin = point - originPoint;\n    var scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate, scale, originPoint, boxScale) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, _a) {\n    var x = _a.x, y = _a.y;\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {\n    var _a, _b;\n    if (isSharedTransition === void 0) { isSharedTransition = false; }\n    var treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    var node;\n    var delta;\n    for (var i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, _a) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    var originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys$1 = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys$1 = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys$1);\n    transformAxis(box.y, transform, yKeys$1);\n}\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    if (target === void 0) { target = 0; }\n    if (maxDistance === void 0) { maxDistance = 0.01; }\n    return popmotion.distance(value, target) < maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin) {\n    if (origin === void 0) { origin = 0.5; }\n    delta.origin = origin;\n    delta.originPoint = popmotion.mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {\n    if (translate === void 0) { translate = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (origin === void 0) { origin = 0.5; }\n    if (originAxis === void 0) { originAxis = axis; }\n    if (sourceAxis === void 0) { sourceAxis = axis; }\n    if (styleValueTypes.percent.test(translate)) {\n        translate = parseFloat(translate);\n        var relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    var originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, _a, origin, sourceAxis) {\n    var _b = tslib.__read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nvar xKeys = [\"x\", \"scaleX\", \"originX\"];\nvar yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nvar createAxisDelta = function () { return ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n}); };\nvar createDelta = function () { return ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n}); };\nvar createAxis = function () { return ({ min: 0, max: 0 }); };\nvar createBox = function () { return ({\n    x: createAxis(),\n    y: createAxis(),\n}); };\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\n\nvar NodeStack = /** @class */ (function () {\n    function NodeStack() {\n        this.members = [];\n    }\n    NodeStack.prototype.add = function (node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    };\n    NodeStack.prototype.remove = function (node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            var prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    };\n    NodeStack.prototype.relegate = function (node) {\n        var indexOfNode = this.members.findIndex(function (member) { return node === member; });\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        var prevLead;\n        for (var i = indexOfNode; i >= 0; i--) {\n            var member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    NodeStack.prototype.promote = function (node, preserveFollowOpacity) {\n        var _a;\n        var prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n                node.snapshot.isShared = true;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            var crossfade = node.options.crossfade;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    };\n    NodeStack.prototype.exitAnimationComplete = function () {\n        this.members.forEach(function (node) {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    };\n    NodeStack.prototype.scheduleRender = function () {\n        this.members.forEach(function (node) {\n            node.instance && node.scheduleRender(false);\n        });\n    };\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    NodeStack.prototype.removeLeadSnapshot = function () {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    };\n    return NodeStack;\n}());\n\nvar scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nvar identityProjection = \"translate3d(0px, 0px, 0) scale(1, 1)\";\nfunction buildProjectionTransform(delta, treeScale, latestTransform) {\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    var xTranslate = delta.x.translate / treeScale.x;\n    var yTranslate = delta.y.translate / treeScale.y;\n    var transform = \"translate3d(\".concat(xTranslate, \"px, \").concat(yTranslate, \"px, 0) \");\n    if (latestTransform) {\n        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;\n        if (rotate)\n            transform += \"rotate(\".concat(rotate, \"deg) \");\n        if (rotateX)\n            transform += \"rotateX(\".concat(rotateX, \"deg) \");\n        if (rotateY)\n            transform += \"rotateY(\".concat(rotateY, \"deg) \");\n    }\n    transform += \"scale(\".concat(delta.x.scale, \", \").concat(delta.y.scale, \")\");\n    return transform === identityProjection ? \"none\" : transform;\n}\n\nfunction eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\n/**\n * A list of all transformable axes. We'll use this list to generated a version\n * of each axes for each transform.\n */\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * An ordered array of each transformable value. By default, transform values\n * will be sorted to this order.\n */\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\n * Generate a list of every possible transform key.\n */\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n    return transformAxes.forEach(function (axesKey) {\n        return transformProps.push(operationKey + axesKey);\n    });\n});\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nfunction sortTransformProps(a, b) {\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\n * A quick lookup for transform props.\n */\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n    return transformPropSet.has(key);\n}\n/**\n * A quick lookup for transform origin props\n */\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n    return transformOriginProps.has(key);\n}\n\nvar compareByDepth = function (a, b) {\n    return a.depth - b.depth;\n};\n\nvar FlatTree = /** @class */ (function () {\n    function FlatTree() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    FlatTree.prototype.add = function (child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.remove = function (child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    };\n    FlatTree.prototype.forEach = function (callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    };\n    return FlatTree;\n}());\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nvar animationTarget = 1000;\n/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nvar globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\nfunction createProjectionNode(_a) {\n    var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, resetTransform = _a.resetTransform;\n    return /** @class */ (function () {\n        function ProjectionNode(id, latestValues, parent) {\n            var _this = this;\n            if (latestValues === void 0) { latestValues = {}; }\n            if (parent === void 0) { parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent(); }\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to actually\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = function () {\n                if (_this.isUpdating) {\n                    _this.isUpdating = false;\n                    _this.clearAllSnapshots();\n                }\n            };\n            this.updateProjection = function () {\n                _this.nodes.forEach(resolveTargetDelta);\n                _this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            /**\n             * Animation\n             */\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.id = id;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path), false), [parent], false) : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            id && this.root.registerPotentialNode(id, this);\n            for (var i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        ProjectionNode.prototype.addEventListener = function (name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        };\n        ProjectionNode.prototype.notifyListeners = function (name) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, tslib.__spreadArray([], tslib.__read(args), false));\n        };\n        ProjectionNode.prototype.hasListeners = function (name) {\n            return this.eventHandlers.has(name);\n        };\n        ProjectionNode.prototype.registerPotentialNode = function (id, node) {\n            this.potentialNodes.set(id, node);\n        };\n        /**\n         * Lifecycles\n         */\n        ProjectionNode.prototype.mount = function (instance, isLayoutDirty) {\n            var _this = this;\n            var _a;\n            if (isLayoutDirty === void 0) { isLayoutDirty = false; }\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement = _b.visualElement;\n            if (visualElement && !visualElement.getInstance()) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.id && this.root.potentialNodes.delete(this.id);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                var unblockTimeout_1;\n                var resizeUnblockUpdate_1 = function () {\n                    return (_this.root.updateBlockedByResize = false);\n                };\n                attachResizeListener(instance, function () {\n                    _this.root.updateBlockedByResize = true;\n                    clearTimeout(unblockTimeout_1);\n                    unblockTimeout_1 = setTimeout(resizeUnblockUpdate_1, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        _this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", function (_a) {\n                    var _b, _c, _d, _e, _f;\n                    var delta = _a.delta, hasLayoutChanged = _a.hasLayoutChanged, hasRelativeTargetChanged = _a.hasRelativeTargetChanged, newLayout = _a.layout;\n                    if (_this.isTreeAnimationBlocked()) {\n                        _this.target = undefined;\n                        _this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    var layoutTransition = (_c = (_b = _this.options.transition) !== null && _b !== void 0 ? _b : visualElement.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;\n                    var onLayoutAnimationComplete = visualElement.getProps().onLayoutAnimationComplete;\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    var targetChanged = !_this.targetLayout ||\n                        !boxEquals(_this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !_this.currentAnimation))) {\n                        if (_this.resumeFrom) {\n                            _this.resumingFrom = _this.resumeFrom;\n                            _this.resumingFrom.resumingFrom = undefined;\n                        }\n                        _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        _this.startAnimation(tslib.__assign(tslib.__assign({}, getValueTransition(layoutTransition, \"layout\")), { onComplete: onLayoutAnimationComplete }));\n                    }\n                    else {\n                        _this.isLead() && ((_f = (_e = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e));\n                    }\n                    _this.targetLayout = newLayout;\n                });\n            }\n        };\n        ProjectionNode.prototype.unmount = function () {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            sync.cancelSync.preRender(this.updateProjection);\n        };\n        // only on the root\n        ProjectionNode.prototype.blockUpdate = function () {\n            this.updateManuallyBlocked = true;\n        };\n        ProjectionNode.prototype.unblockUpdate = function () {\n            this.updateManuallyBlocked = false;\n        };\n        ProjectionNode.prototype.isUpdateBlocked = function () {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        };\n        ProjectionNode.prototype.isTreeAnimationBlocked = function () {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        };\n        // Note: currently only running on root node\n        ProjectionNode.prototype.startUpdate = function () {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n        };\n        ProjectionNode.prototype.willUpdate = function (shouldNotifyListeners) {\n            var _a, _b, _c;\n            if (shouldNotifyListeners === void 0) { shouldNotifyListeners = true; }\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                node.shouldResetTransform = true;\n                /**\n                 * TODO: Check we haven't updated the scroll\n                 * since the last didUpdate\n                 */\n                node.updateScroll();\n            }\n            var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;\n            if (layoutId === undefined && !layout)\n                return;\n            var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        };\n        // Note: Currently only running on root node\n        ProjectionNode.prototype.didUpdate = function () {\n            var updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            sync.flushSync.update();\n            sync.flushSync.preRender();\n            sync.flushSync.render();\n        };\n        ProjectionNode.prototype.clearAllSnapshots = function () {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        };\n        ProjectionNode.prototype.scheduleUpdateProjection = function () {\n            sync__default[\"default\"].preRender(this.updateProjection, false, true);\n        };\n        ProjectionNode.prototype.scheduleCheckAfterUnmount = function () {\n            var _this = this;\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync__default[\"default\"].postRender(function () {\n                if (_this.isLayoutDirty) {\n                    _this.root.didUpdate();\n                }\n                else {\n                    _this.root.checkUpdateFailed();\n                }\n            });\n        };\n        /**\n         * Update measurements\n         */\n        ProjectionNode.prototype.updateSnapshot = function () {\n            if (this.snapshot || !this.instance)\n                return;\n            var measured = this.measure();\n            var layout = this.removeTransform(this.removeElementScroll(measured));\n            roundBox(layout);\n            this.snapshot = {\n                measured: measured,\n                layout: layout,\n                latestValues: {},\n            };\n        };\n        ProjectionNode.prototype.updateLayout = function () {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (var i = 0; i < this.path.length; i++) {\n                    var node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            var measured = this.measure();\n            roundBox(measured);\n            var prevLayout = this.layout;\n            this.layout = {\n                measured: measured,\n                actual: this.removeElementScroll(measured),\n            };\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.actual);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);\n        };\n        ProjectionNode.prototype.updateScroll = function () {\n            if (this.options.layoutScroll && this.instance) {\n                this.scroll = measureScroll(this.instance);\n            }\n        };\n        ProjectionNode.prototype.resetTransform = function () {\n            var _a;\n            if (!resetTransform)\n                return;\n            var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        };\n        ProjectionNode.prototype.measure = function () {\n            var visualElement = this.options.visualElement;\n            if (!visualElement)\n                return createBox();\n            var box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            var scroll = this.root.scroll;\n            if (scroll) {\n                translateAxis(box.x, scroll.x);\n                translateAxis(box.y, scroll.y);\n            }\n            return box;\n        };\n        ProjectionNode.prototype.removeElementScroll = function (box) {\n            var boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                var scroll_1 = node.scroll, options = node.options;\n                if (node !== this.root && scroll_1 && options.layoutScroll) {\n                    translateAxis(boxWithoutScroll.x, scroll_1.x);\n                    translateAxis(boxWithoutScroll.y, scroll_1.y);\n                }\n            }\n            return boxWithoutScroll;\n        };\n        ProjectionNode.prototype.applyTransform = function (box, transformOnly) {\n            if (transformOnly === void 0) { transformOnly = false; }\n            var withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.x,\n                        y: -node.scroll.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        };\n        ProjectionNode.prototype.removeTransform = function (box) {\n            var _a;\n            var boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (var i = 0; i < this.path.length; i++) {\n                var node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                var sourceBox = createBox();\n                var nodeBox = node.measure();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layout, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        };\n        /**\n         *\n         */\n        ProjectionNode.prototype.setTargetDelta = function (delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n        };\n        ProjectionNode.prototype.setOptions = function (options) {\n            var _a;\n            this.options = tslib.__assign(tslib.__assign(tslib.__assign({}, this.options), options), { crossfade: (_a = options.crossfade) !== null && _a !== void 0 ? _a : true });\n        };\n        ProjectionNode.prototype.clearMeasurements = function () {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        };\n        /**\n         * Frame calculations\n         */\n        ProjectionNode.prototype.resolveTargetDelta = function () {\n            var _a;\n            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent && this.relativeParent.layout) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.actual);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.actual);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.actual);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                this.relativeParent = this.getClosestProjectingParent();\n                if (this.relativeParent &&\n                    Boolean(this.relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !this.relativeParent.options.layoutScroll &&\n                    this.relativeParent.target) {\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n            }\n        };\n        ProjectionNode.prototype.getClosestProjectingParent = function () {\n            if (!this.parent || hasTransform(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        };\n        ProjectionNode.prototype.calcProjection = function () {\n            var _a;\n            var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            var lead = this.getLead();\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.actual);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);\n            var target = lead.target;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            var prevTreeScaleX = this.treeScale.x;\n            var prevTreeScaleY = this.treeScale.y;\n            var prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        };\n        ProjectionNode.prototype.hide = function () {\n            this.isVisible = false;\n            // TODO: Schedule render\n        };\n        ProjectionNode.prototype.show = function () {\n            this.isVisible = true;\n            // TODO: Schedule render\n        };\n        ProjectionNode.prototype.scheduleRender = function (notifyAll) {\n            var _a, _b, _c;\n            if (notifyAll === void 0) { notifyAll = true; }\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        };\n        ProjectionNode.prototype.setAnimationOrigin = function (delta, hasOnlyRelativeTargetChanged) {\n            var _this = this;\n            var _a;\n            if (hasOnlyRelativeTargetChanged === void 0) { hasOnlyRelativeTargetChanged = false; }\n            var snapshot = this.snapshot;\n            var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            var mixedValues = tslib.__assign({}, this.latestValues);\n            var targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            var relativeLayout = createBox();\n            var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;\n            var isOnlyMember = (((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.members.length) || 0) <= 1;\n            var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.mixTargetDelta = function (latest) {\n                var _a;\n                var progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                _this.setTargetDelta(targetDelta);\n                if (_this.relativeTarget &&\n                    _this.relativeTargetOrigin &&\n                    _this.layout &&\n                    ((_a = _this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);\n                    mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    _this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                _this.root.scheduleUpdateProjection();\n                _this.scheduleRender();\n            };\n            this.mixTargetDelta(0);\n        };\n        ProjectionNode.prototype.startAnimation = function (options) {\n            var _this = this;\n            var _a, _b;\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                sync.cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync__default[\"default\"].update(function () {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                _this.currentAnimation = animate(0, animationTarget, tslib.__assign(tslib.__assign({}, options), { onUpdate: function (latest) {\n                        var _a;\n                        _this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    }, onComplete: function () {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        _this.completeAnimation();\n                    } }));\n                if (_this.resumingFrom) {\n                    _this.resumingFrom.currentAnimation = _this.currentAnimation;\n                }\n                _this.pendingAnimation = undefined;\n            });\n        };\n        ProjectionNode.prototype.completeAnimation = function () {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        };\n        ProjectionNode.prototype.finishAnimation = function () {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        };\n        ProjectionNode.prototype.applyTransformsToTarget = function () {\n            var _a = this.getLead(), targetWithTransforms = _a.targetWithTransforms, target = _a.target, layout = _a.layout, latestValues = _a.latestValues;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its actual layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        };\n        ProjectionNode.prototype.registerSharedNode = function (layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            var stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        };\n        ProjectionNode.prototype.isLead = function () {\n            var stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        };\n        ProjectionNode.prototype.getLead = function () {\n            var _a;\n            var layoutId = this.options.layoutId;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        };\n        ProjectionNode.prototype.getPrevLead = function () {\n            var _a;\n            var layoutId = this.options.layoutId;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        };\n        ProjectionNode.prototype.getStack = function () {\n            var layoutId = this.options.layoutId;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        };\n        ProjectionNode.prototype.promote = function (_a) {\n            var _b = _a === void 0 ? {} : _a, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;\n            var stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition: transition });\n        };\n        ProjectionNode.prototype.relegate = function () {\n            var stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        };\n        ProjectionNode.prototype.resetRotation = function () {\n            var visualElement = this.options.visualElement;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            var hasRotate = false;\n            // Keep a record of all the values we've reset\n            var resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (var i = 0; i < transformAxes.length; i++) {\n                var axis = transformAxes[i];\n                var key = \"rotate\" + axis;\n                // If this rotation doesn't exist as a motion value, then we don't\n                // need to reset it\n                if (!visualElement.getStaticValue(key)) {\n                    continue;\n                }\n                hasRotate = true;\n                // Record the rotation and then temporarily set it to 0\n                resetValues[key] = visualElement.getStaticValue(key);\n                visualElement.setStaticValue(key, 0);\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.syncRender();\n            // Put back all the values we reset\n            for (var key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        };\n        ProjectionNode.prototype.getProjectionStyles = function (styleProp) {\n            var _a, _b, _c, _d, _e, _f;\n            if (styleProp === void 0) { styleProp = {}; }\n            // TODO: Return lifecycle-persistent object\n            var styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            var transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            var lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                var emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            var valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            var _g = this.projectionDelta, x = _g.x, y = _g.y;\n            styles.transformOrigin = \"\".concat(x.origin * 100, \"% \").concat(y.origin * 100, \"% 0\");\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its actual\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_e = valuesToRender.opacity) !== null && _e !== void 0 ? _e : \"\"\n                        : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (var key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;\n                var corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    var num = applyTo.length;\n                    for (var i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        };\n        ProjectionNode.prototype.clearSnapshot = function () {\n            this.resumeFrom = this.snapshot = undefined;\n        };\n        // Only run on root\n        ProjectionNode.prototype.resetTree = function () {\n            this.root.nodes.forEach(function (node) { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        };\n        return ProjectionNode;\n    }());\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c, _d;\n    var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        var _e = node.layout, layout_1 = _e.actual, measuredLayout = _e.measured;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (node.options.animationType === \"size\") {\n            eachAxis(function (axis) {\n                var axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                var length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout_1[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (node.options.animationType === \"position\") {\n            eachAxis(function (axis) {\n                var axisSnapshot = snapshot.isShared\n                    ? snapshot.measured[axis]\n                    : snapshot.layout[axis];\n                var length = calcLength(layout_1[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        var layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout_1, snapshot.layout);\n        var visualDelta = createDelta();\n        if (snapshot.isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout_1, snapshot.layout);\n        }\n        var hasLayoutChanged = !isDeltaZero(layoutDelta);\n        var hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            node.relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (node.relativeParent && !node.relativeParent.resumeFrom) {\n                var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;\n                if (parentSnapshot && parentLayout) {\n                    var relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);\n                    var relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout: layout_1,\n            snapshot: snapshot,\n            delta: visualDelta,\n            layoutDelta: layoutDelta,\n            hasLayoutChanged: hasLayoutChanged,\n            hasRelativeTargetChanged: hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = popmotion.mix(delta.translate, 0, p);\n    output.scale = popmotion.mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = popmotion.mix(from.min, to.min, p);\n    output.max = popmotion.mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nvar defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, id) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    var searchNode = node.root;\n    for (var i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    var element = searchElement.querySelector(\"[data-projection-id=\\\"\".concat(id, \"\\\"]\"));\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\n\nvar id = 1;\nfunction useProjectionId() {\n    return useConstant(function () {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\n/**\n * @internal\n */\nvar LayoutGroupContext = React.createContext({});\n\n/**\n * @internal\n */\nvar SwitchLayoutGroupContext = React.createContext({});\n\nfunction useProjection(projectionId, _a, visualElement, ProjectionNodeConstructor) {\n    var _b;\n    var layoutId = _a.layoutId, layout = _a.layout, drag = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;\n    var initialPromotionConfig = React.useContext(SwitchLayoutGroupContext);\n    if (!ProjectionNodeConstructor ||\n        !visualElement ||\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n        return;\n    }\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_b = visualElement.parent) === null || _b === void 0 ? void 0 : _b.projection);\n    visualElement.projection.setOptions({\n        layoutId: layoutId,\n        layout: layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement: visualElement,\n        scheduleRender: function () { return visualElement.scheduleRender(); },\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig: initialPromotionConfig,\n        layoutScroll: layoutScroll,\n    });\n}\n\nvar VisualElementHandler = /** @class */ (function (_super) {\n    tslib.__extends(VisualElementHandler, _super);\n    function VisualElementHandler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    VisualElementHandler.prototype.getSnapshotBeforeUpdate = function () {\n        this.updateProps();\n        return null;\n    };\n    VisualElementHandler.prototype.componentDidUpdate = function () { };\n    VisualElementHandler.prototype.updateProps = function () {\n        var _a = this.props, visualElement = _a.visualElement, props = _a.props;\n        if (visualElement)\n            visualElement.setProps(props);\n    };\n    VisualElementHandler.prototype.render = function () {\n        return this.props.children;\n    };\n    return VisualElementHandler;\n}(React__default[\"default\"].Component));\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n *\n * @internal\n */\nfunction createMotionComponent(_a) {\n    var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState = _a.useVisualState, Component = _a.Component;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        var layoutId = useLayoutId(props);\n        props = tslib.__assign(tslib.__assign({}, props), { layoutId: layoutId });\n        /**\n         * If we're rendering in a static environment, we only visually update the component\n         * as a result of a React-rerender rather than interactions or animations. This\n         * means we don't need to load additional memory structures like VisualElement,\n         * or any gesture/animation features.\n         */\n        var config = React.useContext(MotionConfigContext);\n        var features = null;\n        var context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        var projectionId = config.isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        var visualState = useVisualState(props, config.isStatic);\n        if (!config.isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, tslib.__assign(tslib.__assign({}, config), props), createVisualElement);\n            useProjection(projectionId, props, context.visualElement, projectionNodeConstructor ||\n                featureDefinitions.projectionNodeConstructor);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            features = useFeatures(props, context.visualElement, preloadedFeatures);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React__namespace.createElement(VisualElementHandler, { visualElement: context.visualElement, props: tslib.__assign(tslib.__assign({}, config), props) },\n            features,\n            React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))));\n    }\n    return React.forwardRef(MotionComponent);\n}\nfunction useLayoutId(_a) {\n    var _b;\n    var layoutId = _a.layoutId;\n    var layoutGroupId = (_b = React.useContext(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\n/**\n * A list of all valid MotionProps.\n *\n * @internalremarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nvar validMotionProps = new Set([\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"style\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"whileDrag\",\n    \"onPan\",\n    \"onPanStart\",\n    \"onPanEnd\",\n    \"onPanSessionStart\",\n    \"onTap\",\n    \"onTapStart\",\n    \"onTapCancel\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"whileFocus\",\n    \"whileTap\",\n    \"whileHover\",\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n    \"layoutScroll\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nvar shouldForward = function (key) { return !isValidMotionProp(key); };\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = function (key) {\n        return key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n    };\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    var filteredProps = {};\n    for (var key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nfunction isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nfunction makeState(_a, props, context, presenceContext) {\n    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;\n    var state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = function (instance) { return onMount(props, instance, state); };\n    }\n    return state;\n}\nvar makeUseVisualState = function (config) {\n    return function (props, isStatic) {\n        var context = React.useContext(MotionContext);\n        var presenceContext = React.useContext(PresenceContext);\n        return isStatic\n            ? makeState(config, props, context, presenceContext)\n            : useConstant(function () {\n                return makeState(config, props, context, presenceContext);\n            });\n    };\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    var values = {};\n    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n    var motionValues = scrapeMotionValues(props);\n    for (var key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    var initial = props.initial, animate = props.animate;\n    var isControllingVariants = checkIfControllingVariants(props);\n    var isVariantNode = checkIfVariantNode(props);\n    if (context &&\n        isVariantNode &&\n        !isControllingVariants &&\n        props.inherit !== false) {\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\n    }\n    var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n    var variantToSet = initialAnimationIsBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach(function (definition) {\n            var resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            var transitionEnd = resolved.transitionEnd; resolved.transition; var target = tslib.__rest(resolved, [\"transitionEnd\", \"transition\"]);\n            for (var key in target) {\n                var valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    var index = initialAnimationIsBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (var key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexports.AnimationType = void 0;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(exports.AnimationType || (exports.AnimationType = {}));\n\nfunction addDomEvent(target, eventName, handler, options) {\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler, options); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    React.useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nfunction isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nfunction useUnmountEffect(callback) {\n    return React.useEffect(function () { return function () { return callback(); }; }, []);\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = React.useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useOpaqueId when released in React\n    var id = useUniqueId();\n    React.useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(React.useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\nvar counter = 0;\nvar incrementId = function () { return counter++; };\nvar useUniqueId = function () { return useConstant(incrementId); };\n\nfunction shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nvar isNumericalString = function (v) { return /^\\-?\\d*\\.?\\d+$/.test(v); };\n\n/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nvar isZeroValueString = function (v) { return /^0[^.\\s]+$/.test(v); };\n\n/**\n * Tests a provided value against a ValueType\n */\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\n\n/**\n * ValueType for \"auto\"\n */\nvar auto = {\n    test: function (v) { return v === \"auto\"; },\n    parse: function (v) { return v; },\n};\n\n/**\n * A list of value types commonly used for dimensions\n */\nvar dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nvar findDimensionValueType = function (v) {\n    return dimensionValueTypes.find(testValueType(v));\n};\n\n/**\n * A list of all ValueTypes\n */\nvar valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes), false), [styleValueTypes.color, styleValueTypes.complex], false);\n/**\n * Tests a value against the list of ValueTypes\n */\nvar findValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    var resolved = resolveVariant(visualElement, definition);\n    var _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b; _a.transition; var target = tslib.__rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = tslib.__assign(tslib.__assign({}, target), transitionEnd);\n    for (var key in target) {\n        var value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels), false).reverse();\n    reversedLabels.forEach(function (key) {\n        var _a;\n        var variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (var i = 0; i < numNewValues; i++) {\n        var key = newValueKeys[i];\n        var targetValue = target[key];\n        var value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && styleValueTypes.complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    var valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    var origin = {};\n    for (var key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\n/**\n * @internal\n */\nfunction animateVisualElement(visualElement, definition, options) {\n    if (options === void 0) { options = {}; }\n    visualElement.notifyAnimationStart(definition);\n    var animation;\n    if (Array.isArray(definition)) {\n        var animations = definition.map(function (variant) {\n            return animateVariant(visualElement, variant, options);\n        });\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        var resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(function () {\n        return visualElement.notifyAnimationComplete(definition);\n    });\n}\nfunction animateVariant(visualElement, variant, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var resolved = resolveVariant(visualElement, variant, options.custom);\n    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getAnimation = resolved\n        ? function () { return animateTarget(visualElement, resolved, options); }\n        : function () { return Promise.resolve(); };\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? function (forwardDelay) {\n            if (forwardDelay === void 0) { forwardDelay = 0; }\n            var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : function () { return Promise.resolve(); };\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    var when = transition.when;\n    if (when) {\n        var _c = tslib.__read(when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, _a) {\n    var _b;\n    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;\n    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = tslib.__rest(_e, [\"transition\", \"transitionEnd\"]);\n    if (transitionOverride)\n        transition = transitionOverride;\n    var animations = [];\n    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);\n    for (var key in target) {\n        var value = visualElement.getValue(key);\n        var valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        var animation = startAnimation(key, value, valueTarget, tslib.__assign({ delay: delay }, transition));\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(function () {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {\n    if (delayChildren === void 0) { delayChildren = 0; }\n    if (staggerChildren === void 0) { staggerChildren = 0; }\n    if (staggerDirection === void 0) { staggerDirection = 1; }\n    var animations = [];\n    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1\n        ? function (i) {\n            if (i === void 0) { i = 0; }\n            return i * staggerChildren;\n        }\n        : function (i) {\n            if (i === void 0) { i = 0; }\n            return maxStaggerDuration - i * staggerChildren;\n        };\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach(function (child, i) {\n        animations.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.forEachValue(function (value) { return value.stop(); });\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation(_a, key) {\n    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;\n    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nvar variantPriorityOrder = [\n    exports.AnimationType.Animate,\n    exports.AnimationType.InView,\n    exports.AnimationType.Focus,\n    exports.AnimationType.Hover,\n    exports.AnimationType.Tap,\n    exports.AnimationType.Drag,\n    exports.AnimationType.Exit,\n];\nvar reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder), false).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = tslib.__assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            var shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, tslib.__spreadArray([], tslib.__read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: tslib.__assign({ type: type }, options),\n                }); })), false));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = tslib.__assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        return animateChanges(options, type);\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[exports.AnimationType.Animate] = createTypeState(true),\n        _a[exports.AnimationType.InView] = createTypeState(),\n        _a[exports.AnimationType.Hover] = createTypeState(),\n        _a[exports.AnimationType.Tap] = createTypeState(),\n        _a[exports.AnimationType.Drag] = createTypeState(),\n        _a[exports.AnimationType.Focus] = createTypeState(),\n        _a[exports.AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            React.useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = tslib.__read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n        var presenceContext = React.useContext(PresenceContext);\n        React.useEffect(function () {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(exports.AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            names.forEach(function (name) {\n                var _a;\n                var on = \"on\" + name;\n                var propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args), false));\n        };\n    });\n    return lifecycles;\n}\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;\n        if (options === void 0) { options = {}; }\n        var isMounted = false;\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender\n         */\n        var lifecycles = createLifecycles();\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = tslib.__assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         * Render the element with the latest styles outside of the React\n         * render lifecycle\n         */\n        function render() {\n            if (!instance || !isMounted)\n                return;\n            triggerBuild();\n            renderInstance(instance, renderState, props.style, element.projection);\n        }\n        function triggerBuild() {\n            build(element, renderState, latestValues, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync__default[\"default\"].update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = tslib.__assign(tslib.__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             *\n             */\n            presenceId: presenceId, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by the projection tree, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                isMounted = true;\n                instance = element.current = newInstance;\n                if (element.projection) {\n                    element.projection.mount(newInstance);\n                }\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n                element.setProps(props);\n            }, \n            /**\n             *\n             */\n            unmount: function () {\n                var _a;\n                (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n                sync.cancelSync.update(update);\n                sync.cancelSync.render(render);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                lifecycles.clearAllListeners();\n                instance = undefined;\n                isMounted = false;\n            }, \n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () {\n                        return closestVariantNode.variantChildren.delete(child);\n                    };\n                }\n            }, sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            }, \n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            }, \n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function () {\n                return measureViewportBox(instance, props);\n            }, \n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            }, \n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) {\n                var _a;\n                return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n            }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            }, \n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            }, \n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync__default[\"default\"].render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                if (newProps.transformTemplate || props.transformTemplate) {\n                    element.scheduleRender();\n                }\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, getTransformPagePoint: function () {\n                return props.transformPagePoint;\n            }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            } });\n        return element;\n    };\n};\nvar variantProps = tslib.__spreadArray([\"initial\"], tslib.__read(variantPriorityOrder), false);\nvar numVariantProps = variantProps.length;\n\nfunction useForceUpdate() {\n    var isUnmountingRef = React.useRef(false);\n    var _a = tslib.__read(React.useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (isUnmountingRef.current = true); });\n    var forceRender = React.useCallback(function () {\n        !isUnmountingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = React.useCallback(function () { return sync__default[\"default\"].postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    var value = useConstant(function () { return motionValue(initial); });\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    var isStatic = React.useContext(MotionConfigContext).isStatic;\n    if (isStatic) {\n        var _a = tslib.__read(React.useState(initial), 2), setLatest_1 = _a[1];\n        React.useEffect(function () { return value.onChange(setLatest_1); }, []);\n    }\n    return value;\n}\n\nexports.FlatTree = FlatTree;\nexports.LayoutGroupContext = LayoutGroupContext;\nexports.LazyContext = LazyContext;\nexports.MotionConfigContext = MotionConfigContext;\nexports.MotionContext = MotionContext;\nexports.MotionValue = MotionValue;\nexports.PresenceContext = PresenceContext;\nexports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;\nexports.addDomEvent = addDomEvent;\nexports.addPointerEvent = addPointerEvent;\nexports.addScaleCorrector = addScaleCorrector;\nexports.animate = animate;\nexports.animateVisualElement = animateVisualElement;\nexports.animations = animations;\nexports.calcLength = calcLength;\nexports.checkTargetForNewValues = checkTargetForNewValues;\nexports.createBox = createBox;\nexports.createMotionComponent = createMotionComponent;\nexports.createProjectionNode = createProjectionNode;\nexports.eachAxis = eachAxis;\nexports.extractEventInfo = extractEventInfo;\nexports.filterProps = filterProps;\nexports.findDimensionValueType = findDimensionValueType;\nexports.getDefaultValueType = getDefaultValueType;\nexports.getGlobalLock = getGlobalLock;\nexports.getOrigin = getOrigin;\nexports.globalProjectionState = globalProjectionState;\nexports.instantAnimationState = instantAnimationState;\nexports.isDragActive = isDragActive;\nexports.isKeyframesTarget = isKeyframesTarget;\nexports.isMotionValue = isMotionValue;\nexports.isMouseEvent = isMouseEvent;\nexports.isRefObject = isRefObject;\nexports.isTouchEvent = isTouchEvent;\nexports.isTransformOriginProp = isTransformOriginProp;\nexports.isTransformProp = isTransformProp;\nexports.isValidMotionProp = isValidMotionProp;\nexports.loadExternalIsValidProp = loadExternalIsValidProp;\nexports.loadFeatures = loadFeatures;\nexports.makeRenderlessComponent = makeRenderlessComponent;\nexports.makeUseVisualState = makeUseVisualState;\nexports.motionValue = motionValue;\nexports.moveItem = moveItem;\nexports.numberValueTypes = numberValueTypes;\nexports.resolveMotionValue = resolveMotionValue;\nexports.scaleCorrectors = scaleCorrectors;\nexports.secondsToMilliseconds = secondsToMilliseconds;\nexports.setValues = setValues;\nexports.sortTransformProps = sortTransformProps;\nexports.startAnimation = startAnimation;\nexports.stopAnimation = stopAnimation;\nexports.transformProps = transformProps;\nexports.translateAxis = translateAxis;\nexports.useConstant = useConstant;\nexports.useDomEvent = useDomEvent;\nexports.useForceUpdate = useForceUpdate;\nexports.useIsPresent = useIsPresent;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useMotionValue = useMotionValue;\nexports.usePointerEvent = usePointerEvent;\nexports.usePresence = usePresence;\nexports.useUnmountEffect = useUnmountEffect;\nexports.useVisualElementContext = useVisualElementContext;\nexports.visualElement = visualElement;\nexports.wrapHandler = wrapHandler;\n"]},"metadata":{},"sourceType":"script"}